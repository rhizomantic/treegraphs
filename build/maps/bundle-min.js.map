{"version":3,"sources":["main.js","spread.js","render.js"],"names":["seed","density","render","canvas","editor","area","tickers","Set","t","go","tweenable","graphs","def0","props","renderConfig","type","levels","net","num","pos","ang","step","ease","pow","terms","min","max","dur","turn","children","def","size","fill","stroke","weight","dif","mirror","setup","createCanvas","windowWidth","windowHeight","parent","background","strokeWeight","noFill","smooth","select","mouseClicked","reset","console","log","fromEditor","_def","JSON","parse","value","int","random","randomSeed","noiseSeed","k","Graph","push","RenderCurves","stringify","replacer","key","val","Math","floor","generate","total","dad","dn","budget","neo","PI","draw","g","root","update","moveNode","makeGroup","graph","i","n","Node","ix","nrm","kids","depth","count","anchor","rot","init","j","length","[object Object]","args","this","rnd","curves","tw","isNaN","parseCurve","prop","Object","entries","x","base","time","p","abs","sin","noise","mousePressed","keyTyped","document","activeElement","getElementById","gt","getTime","saveCanvas","saveJSON","defs","style","hide","show","contrast","f","constrain","now","Date","getFullYear","toString","substring","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","windowResized","resizeCanvas","c","out","ts","split","ps","parseFloat","trm","_mirror","cos","drawNode","line","ellipse","df","lv","hasOwnProperty","renderNode","level","bezier","prv","nxt","sz","noStroke","hlf","anc","pts"],"mappings":"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","sourcesContent":["var tickers = new Set();\r\nvar t = 0;\r\nvar seed;\r\nvar density;\r\nvar go = true;\r\nvar render;\r\nvar canvas, editor, area;\r\nvar tweenable = [\"step\", \"turn\", \"size\", \"weight\"];\r\n\r\n// pi/2 = 1.5707\r\n// pi/3 = 1.047\r\n// pi/4 = 0.7853\r\nvar graphs = [];\r\n\r\nvar def0 = {\r\n    \"props\": {\r\n        \"render\": \"curves\",\r\n        \"renderConfig\": { \"type\": \"petals\", \"levels\": [['#FFCC0088', 8], ['rgba(255, 0, 0, 0.1)', 4]] }\r\n    },\r\n    \"net\": {\r\n        \"type\": \"fan\", \"num\": 35, \"pos\": [ 500, 400 ], \"ang\": 0, \"step\": {\"ease\":\"sine\", \"pow\": -3, \"terms\": \"noise*0.8+t*0.2\", \"min\": 30, \"max\": 480, \"dur\": 200}, \"turn\": 6.28/35, \"children\": [\r\n            //{ \"type\": \"chain\", \"num\": 3,  \"step\": 40, \"turn\": 0.5 }\r\n        ]\r\n    }\r\n};\r\n\r\nvar def = {\r\n  \"props\": {\r\n    \"render\": {\r\n      \"type\": \"tree\",\r\n      \"levels\": [\r\n        {\r\n          \"type\": \"circles\",\r\n          \"size\": 1.2,\r\n          \"fill\": \"#666666\",\r\n          \"stroke\": 0,\r\n          \"weight\": 1\r\n        },\r\n        {\r\n          \"type\": \"circles\",\r\n          \"size\": 1,\r\n          \"fill\": \"#FFFFFF\",\r\n          \"stroke\": 0,\r\n          \"weight\": 1\r\n        },\r\n        {\r\n          \"stroke\": 0,\r\n          \"weight\": 1.5,\r\n          \"type\": \"tree\",\r\n          \"fill\": \"#888888\",\r\n          \"size\": 1\r\n        },\r\n        {\r\n          \"stroke\": \"#FFFFFF\",\r\n          \"weight\": 1,\r\n          \"type\": \"tree\",\r\n          \"fill\": \"#888888\",\r\n          \"size\": 1\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"net\": [\r\n    {\r\n      \"num\": 2,\r\n      \"type\": \"fan\",\r\n      \"step\": {\r\n        \"min\": 124.75,\r\n        \"dif\": 0,\r\n        \"terms\": \"ix\"\r\n      },\r\n      \"turn\": {\r\n        \"min\": 1.57,\r\n        \"dif\": 6.28,\r\n        \"terms\": \"ix\"\r\n      },\r\n      \"mirror\": false,\r\n      \"weight\": 2,\r\n      \"size\": {\r\n        \"min\": 10,\r\n        \"dif\": 40,\r\n        \"terms\": \"depth\"\r\n      },\r\n      \"children\": [\r\n        {\r\n          \"num\": 3,\r\n          \"type\": \"fan\",\r\n          \"step\": {\r\n            \"min\": 142.94,\r\n            \"dif\": 0,\r\n            \"terms\": \"ix\"\r\n          },\r\n          \"turn\": {\r\n            \"min\": 1.57,\r\n            \"dif\": 6.28,\r\n            \"terms\": \"ix\"\r\n          },\r\n          \"mirror\": false,\r\n          \"weight\": 2,\r\n          \"size\": {\r\n            \"min\": 10,\r\n            \"dif\": 40,\r\n            \"terms\": \"depth\"\r\n          },\r\n          \"children\": [\r\n            {\r\n              \"num\": 4,\r\n              \"type\": \"fan\",\r\n              \"step\": {\r\n                \"min\": 51.87,\r\n                \"dif\": 0,\r\n                \"terms\": \"ix\"\r\n              },\r\n              \"turn\": {\r\n                \"min\": 1.57,\r\n                \"dif\": 6.28,\r\n                \"terms\": \"ix\"\r\n              },\r\n              \"mirror\": false,\r\n              \"weight\": 2,\r\n              \"size\": {\r\n                \"min\": 10,\r\n                \"dif\": 40,\r\n                \"terms\": \"depth\"\r\n              },\r\n              \"children\": []\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"pos\": [\r\n        702.5,\r\n        503.5\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\n\r\n\r\nfunction setup() {\r\n    canvas = createCanvas(windowWidth, windowHeight);\r\n    canvas.parent('container');\r\n    background(\"#FFFFFF\");\r\n    //frameRate(30);\r\n    stroke(0, 128);\r\n    strokeWeight(3);\r\n    //fill(0, 32);\r\n    noFill();\r\n    smooth();\r\n\r\n\r\n\r\n    editor = select(\"#editor\");\r\n    area = select(\"#editor-area\");\r\n    let update = select(\"#update\");\r\n    update.mouseClicked( function(){ reset(true) } );\r\n    let generate = select(\"#generate\");\r\n    generate.mouseClicked( function(){ reset(false) } );\r\n\r\n    reset( false );\r\n\r\n    console.log(\"setup\");\r\n}\r\n\r\nfunction reset(fromEditor) {\r\n  //let area = select(\"#editor-area\");\r\n  let _def;\r\n  if(fromEditor) {\r\n      _def = JSON.parse(area.value());\r\n  } else {\r\n      _def = def;// generate();\r\n  }\r\n  //tickers.clear();\r\n  background(\"#FFFFFF\");\r\n  t = 0;\r\n  seed = int(random(999999));\r\n  randomSeed(seed);\r\n  noiseSeed(seed);\r\n\r\n  graphs = [];\r\n  //let _def = generate();\r\n  var k = new Graph( _def );\r\n  graphs.push(k);\r\n\r\n  render = new RenderCurves(_def);\r\n\r\n  //editor = select(\"#editor\");\r\n\r\n  area.value( JSON.stringify(_def, replacer, 2) );\r\n\r\n}\r\n\r\nfunction replacer(key, val) {\r\n    if(typeof(val) == \"number\") return Math.floor(val*100)/100;\r\n    return val;\r\n}\r\n\r\nfunction generate() {\r\n    let budget = 20;\r\n    let total = 0;\r\n    let def = {\r\n        props:{\r\n            render: { type: \"tree\", levels: [ {type: \"circles\", size: 1.2, fill:\"#666666\" }, {type: \"circles\", size: 1, fill:\"#FFFFFF\" }, {stroke: 0, weight:1.5 }, {stroke:'#FFFFFF', weight:1} ] }\r\n            //\"renderConfig\": { \"type\": \"tree\", \"levels\": [[0, 8], ['#FFFFFF', 4]] }\r\n        },\r\n        net:[]\r\n    };\r\n    let dad = def.net;\r\n    let dn = 1;\r\n\r\n    while(total < budget*0.8) {\r\n        let num = Math.floor( Math.pow(Math.random(), 2) * 10 ) + 2;\r\n        while(total + dn*num > budget && num > 1) {\r\n            num --;\r\n            //console.log(num, dn, total);\r\n        }\r\n        let neo = {\r\n            num: num,\r\n            type: Math.random() < 0.6 ? \"fan\" : \"chain\",\r\n            step: { min:Math.random() * 120 + 30, dif:0 },\r\n            turn: { min:PI/2, dif:(TWO_PI) },\r\n            mirror: num % 2 == 0,\r\n            weight: 2,\r\n            size: { min:10, dif:40, terms:\"depth\"},\r\n            children:[]\r\n        };\r\n        dad.push(neo);\r\n        total += dn * num;\r\n\r\n        if(Math.random() < 0.7) {\r\n            //console.log(\"child\", num, dn, total);\r\n            dad = neo.children;\r\n            dn *= num;\r\n\r\n        } else {\r\n            //console.log(\"sibling\", num, dn, total);\r\n        }\r\n    }\r\n\r\n    def.net[0].pos = [windowWidth/2, windowHeight/2];\r\n\r\n    //console.log(total, def);\r\n    return def;\r\n}\r\n\r\nfunction draw() {\r\n  if(go) {\r\n      background(\"#FFFFFF\");\r\n      for(let g of graphs) {\r\n          g.root.update();\r\n          moveNode(g.root);\r\n          //drawNode(g.root);\r\n          render.render(g.root);\r\n      }\r\n\r\n      t++;\r\n  }\r\n}\r\n\r\nfunction makeGroup(g, dad, graph) {\r\n    //console.log(\"makeGroup\", g);\r\n    for(let i=0; i<g.num; i++) {\r\n        let n = new Node();\r\n        n.ix = i;\r\n        n.nrm = g.num == 1 ? 0 : (1 / (g.num)) * i;\r\n        n.parent = dad;\r\n        n.parent.kids.push(n);\r\n        n.depth = dad.depth+1;\r\n        n.graph = graph;\r\n\r\n        graph.count ++;\r\n        graph.depth = Math.max(graph.depth, n.depth);\r\n        //console.log(n);\r\n\r\n        if(g.type == \"chain\" && i > 0) {\r\n            n.anchor = dad.kids[i-1];\r\n        } else {\r\n            n.anchor = dad;\r\n        }\r\n\r\n        //n.turn = isNaN(g.turn) ? parseCurve(g.turn, n) : g.turn;// n.parent.turn + g.turn * n.ix;\r\n        //n.step = isNaN(g.step) ? parseCurve(g.step, n) : g.step;\r\n        n.type = g.type;\r\n        n.rot = 0;\r\n        n.turn = g.turn;\r\n        n.step = g.step;\r\n        n.mirror = g.mirror;\r\n        n.size = g.size;\r\n        n.weight = g.weight;\r\n        n.fill = g.fill;\r\n        n.stroke = g.stroke;\r\n\r\n        n.init();\r\n\r\n        if(g.children) {\r\n            for(let j=0; j<g.children.length; j++) {\r\n                makeGroup(g.children[j], n, graph);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/***** GRAPH *****/\r\nclass Graph {\r\n  constructor(args = {}) {\r\n    this.ix = graphs.length;\r\n    this.count = 0;\r\n    this.depth = 0;\r\n\r\n    this.root = new Node();\r\n    for(let i=0; i<args.net.length; i++){\r\n        makeGroup(args.net[i], this.root, this);\r\n    }\r\n    this.root.init();\r\n\r\n    console.log(\"graph\", this);\r\n  }\r\n}\r\n\r\n/***** NODE *****/\r\nclass Node {\r\n    constructor(args = {}) {\r\n        //properties\r\n        this.ix = args.ix || 0;\r\n        this.nrm = args.nrm || 0;\r\n        this.rnd = args.rnd || Math.random();\r\n        this.pos = args.pos || [windowWidth / 2, windowHeight / 2];\r\n        this.step = args.step || 30;\r\n        this.turn = args.turn || 0;\r\n        this.rot = args.rot || 0;\r\n        this.mirror = args.mirror || false;\r\n        this.size = args.size || 20;\r\n        this.weight = args.weight || 1;\r\n        this.depth = args.depth || 0;\r\n        this.fill = args.fill || \"#888888\";\r\n        this.stroke = args.stroke || 0;\r\n\r\n        // Node references\r\n        this.graph = args.graph || null;\r\n        this.parent = args.parent || null;\r\n        this.anchor = args.anchor || null;\r\n        this.kids = args.kids || [];\r\n\r\n        this.curves = {};\r\n\r\n    }\r\n\r\n    init() {\r\n        for (let tw of tweenable) {\r\n            if (isNaN(this[tw])) {\r\n                this.curves[tw] = parseCurve(this[tw], this);\r\n            }\r\n        }\r\n\r\n        for(let k of this.kids) {\r\n            k.init();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        for(let [prop, val] of Object.entries(this.curves)) {\r\n            let x = val.base;\r\n            if(val.dur > 0) x += (1 / val.dur) * (t % (val.dur+1)) * val.time;\r\n            if(x > 1) x %= 1;\r\n            this[prop] = val.min + ease(val.ease, x, val.pow) * val.dif;\r\n        }\r\n\r\n        for(let k of this.kids) {\r\n            k.update();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction ease(type, x, p) {\r\n    if(type == \"simple\") {\r\n        return p < 0 ? 1 - Math.pow(1-x, Math.abs(p)) : Math.pow(x, Math.abs(p));\r\n    } else if (type == \"IO\") {\r\n        //if(t < 0.5) return easeSimple(t*2, p) * 0.5;\r\n        //else return (1 - easeSimple(1-(t-0.5)*2, p)) * 0.5 + 0.5;\r\n        if(x < 0.5) return (p < 0 ? 1 - Math.pow(1-x*2, Math.abs(p)) : Math.pow(x*2, Math.abs(p))) * 0.5;\r\n        else return (1 - (p < 0 ? 1 - Math.pow(1-(1-(x-0.5)*2), Math.abs(p)) : Math.pow(1-(x-0.5)*2, Math.abs(p)))) * 0.5 + 0.5;\r\n    } else if (type == \"hill\") {\r\n        x = x < 0.5 ? x * 2 : 1 - (x-0.5)*2;\r\n        return p < 0 ? 1 - Math.pow(1-x, Math.abs(p)) : Math.pow(x, Math.abs(p));\r\n    } else if (type == \"sine\") {\r\n        return Math.sin(x*p*Math.PI*2) * 0.5 + 0.5;\r\n    } else if (type == \"noise\") {\r\n        return noise(x*16);\r\n    } else {\r\n        return x;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mousePressed() {\r\n  //pen.set(mouseX, mouseY);\r\n}\r\n\r\nfunction keyTyped() {\r\n    if (document.activeElement === document.getElementById('editor-area')) return;\r\n\r\n    if (key === ' ') {\r\n        go = !go;\r\n        console.log(\"go\", go);\r\n    } else if (key === 'r') {\r\n        reset(false);\r\n    } else if (key === 's') {\r\n        let gt = getTime();\r\n        saveCanvas(\"collider-\" + gt + \".jpg\");\r\n        saveJSON(defs, \"collider-\" + gt + \".jpg\", false);\r\n    } else if (key === 'g') {\r\n        generate();\r\n    } else if (key === 'e') {\r\n        if (editor.style(\"display\") == \"block\") editor.hide();\r\n        else editor.show();\r\n    }\r\n    // uncomment to prevent any default behavior\r\n    //return false;\r\n}\r\n\r\nfunction contrast(n, f) {\r\n  return constrain(f*(n-0.5) + 0.5, 0, 1);\r\n}\r\n\r\nfunction getTime() {\r\n  let now = new Date();\r\n  return now.getFullYear().toString().substring(2,4) +\r\n        (now.getMonth() + 1).toString().padStart(2, \"0\") +\r\n        (now.getDate()).toString().padStart(2, \"0\") + \"-\" +\r\n        (now.getHours()).toString().padStart(2, \"0\") +\r\n        (now.getMinutes()).toString().padStart(2, \"0\") +\r\n        (now.getSeconds()).toString().padStart(2, \"0\");\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n  canvas.parent('container');\r\n  background(\"#FFFFFF\");\r\n}\r\n","function parseCurve(c, n) {\r\n    c.terms = c.terms || \"ix\";\r\n\r\n    let out = {};\r\n    out.ease = c.ease || \"none\";\r\n    out.pow = c.pow || 2;\r\n    out.min = c.min || 0;\r\n    //out.max = c.max || 1;\r\n    out.dif = c.dif || 0;\r\n    out.dur = c.dur || 0;\r\n\r\n    out.base = 0;\r\n    out.time = 0;\r\n\r\n    let ts = c.terms.split('+')\r\n    for(let t of ts) {\r\n        let ps = t.split('*');\r\n        if(ps[0] == 't' || ps[0] == 'time') {\r\n            out.time = ps.length > 1 ? parseFloat(ps[1]) : 1;\r\n        } else {\r\n            let trm = 1;\r\n            for(let p of ps) {\r\n                if(p == \"ix\") trm *= n.nrm;\r\n                else if(p == \"rnd\") trm *= n.rnd;\r\n                else if(p == \"noise\") trm *= noise(n.parent.nrm, n.nrm);\r\n                else if(p == \"dix\") trm *= n.parent.nrm;\r\n                else if(p == \"drnd\") trm *= n.parent.rnd;\r\n                else if(p == \"depth\") trm *= n.graph.depth == 1 ? 0 : 1/n.graph.depth * n.depth;\r\n                else if(p == \"idepth\") trm *= n.graph.depth == 1 ? 1 : 1 - 1/n.graph.depth * n.depth;\r\n                else trm *= parseFloat(p);\r\n            }\r\n            out.base += trm;\r\n        }\r\n    }\r\n    //console.log(\"curve\", n.graph.depth, n.depth, (n.graph.depth == 1 ? 0 : 1/n.graph.depth * n.depth) );\r\n\r\n    return out;\r\n}\r\n\r\nfunction moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        //let trn = n.parent.rot + n.turn;\r\n\r\n        let _mirror = (n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ ( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - n.turn : n.parent.rot + n.turn;\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + n.step * cos(n.rot),\r\n            n.anchor.pos[1] + n.step * sin(n.rot)\r\n        ]\r\n\r\n        //if(t == 5) console.log(n.depth, n.ix, n.step, n.rot);\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}\r\n\r\n/*function moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        let trn;\r\n        if(isNaN(n.turn)) {\r\n            let x = n.turn.base;\r\n            if(n.turn.dur > 0) x += (1 / n.turn.dur) * (t % (n.turn.dur+1)) * n.turn.time;\r\n            x %= 1;\r\n            trn = n.parent.rot + (n.turn.min + ease(n.turn.ease, x, n.turn.pow) * n.turn.dif);\r\n            //if(n.parent.ix == 1) console.log(n.ix, n.parent.rot, n.turn.min, n.turn.ease, n.turn.pow, n.turn.dif);\r\n        } else {\r\n            trn = n.parent.rot + n.turn * n.ix;\r\n        }\r\n        let _mirror = int(n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ int( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - trn : n.parent.rot + trn;\r\n        //n.rot %= (Math.PI*2);\r\n\r\n        let stp;\r\n        if(isNaN(n.step)) {\r\n            let x = n.step.base;\r\n            if(n.step.dur > 0) x += (1 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time;\r\n            x %= 1;\r\n            stp = n.step.min + ease(n.step.ease, x, n.step.pow) * n.step.dif;\r\n            //if(n.parent.ix == 1) console.log(n.ix, stp, n.step.dif);\r\n        } else {\r\n            stp = n.step;\r\n        }\r\n        //console.log(n.ix, (0.999 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time);\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + stp * cos(n.rot),\r\n            n.anchor.pos[1] + stp * sin(n.rot)\r\n        ]\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}*/\r\n","\r\nfunction drawNode(n) {\r\n    if(n.anchor != null) line(n.anchor.pos[0], n.anchor.pos[1], n.pos[0], n.pos[1]);\r\n    ellipse(n.pos[0], n.pos[1], 10, 10);\r\n\r\n    for(let k of n.kids) {\r\n        drawNode(k);\r\n    }\r\n}\r\n\r\nclass RenderCurves {\r\n    constructor(df = {}) {\r\n        let args = df.props.render || {};\r\n\r\n        this.type= args.type || \"tree\";\r\n        this.levels = args.levels || [{stroke:0, weight:1}];\r\n        for(let lv of this.levels) {\r\n            if(! lv.hasOwnProperty(\"type\")) lv.type = this.type;\r\n            if(! lv.hasOwnProperty(\"stroke\")) lv.stroke = 0;\r\n            if(! lv.hasOwnProperty(\"fill\")) lv.fill = \"#888888\";\r\n            if(! lv.hasOwnProperty(\"weight\")) lv.weight = 1;\r\n            if(! lv.hasOwnProperty(\"size\")) lv.size = 1;\r\n        }\r\n\r\n        //console.log(\"levels\", this.levels)\r\n    }\r\n\r\n    render(n) {\r\n        for(let lv of this.levels) {\r\n            //stroke( lv[0] );\r\n            //strokeWeight( lv[1] || 1 );\r\n            //strokeWeight( (n.depth) * lv[1]);\r\n            //console.log(n.depth, lv[1]);\r\n            //fill(192);\r\n            this.renderNode(n, lv);\r\n        }\r\n    }\r\n\r\n    renderNode(n, level) {\r\n\r\n\r\n        if(level.type== \"bezier\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=1; k<n.kids.length-1; k++) {\r\n                    let ps = [\r\n                        n.kids[k-1].pos[0] + (n.kids[k].pos[0] - n.kids[k-1].pos[0]) / 2,\r\n                        n.kids[k-1].pos[1] + (n.kids[k].pos[1] - n.kids[k-1].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[k+1].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[k+1].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weight );\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(level.type== \"bezier-closed\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=0; k<n.kids.length; k++) {\r\n                    let prv = k==0 ? n.kids.length-1 : k-1;\r\n                    let nxt = k==n.kids.length-1 ? 0 : k+1;\r\n                    let ps = [\r\n                        n.kids[prv].pos[0] + (n.kids[k].pos[0] - n.kids[prv].pos[0]) / 2,\r\n                        n.kids[prv].pos[1] + (n.kids[k].pos[1] - n.kids[prv].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[nxt].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[nxt].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weight );\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(level.type== \"polygon\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weight );\r\n                    line(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"tree\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                strokeWeight( n.kids[k].weight * level.weight );\r\n                line(n.kids[k].anchor.pos[0], n.kids[k].anchor.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                //if(t == 6) console.log(k, n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n            }\r\n        } else if(level.type== \"circles\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                let sz = n.kids[k].size * level.size;\r\n                fill(level.fill == \"node\" ? n.kids[k].fill : level.fill);\r\n                noStroke();\r\n                ellipse( n.kids[k].pos[0], n.kids[k].pos[1], sz, sz);\r\n            }\r\n        }  else if(level.type== \"star\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    bezier(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.pos[0], n.pos[1], n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"umbrella\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [ (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0] ];\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[0], anc[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"snake\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[2], anc[3], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        }  else if(level.type== \"petals\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let pts = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    bezier(pts[0], pts[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], pts[2], pts[3]);\r\n                    bezier(pts[0], pts[1], n.kids[k].pos[0], n.kids[k].pos[1], n.kids[k].pos[0], n.kids[k].pos[1], pts[2], pts[3]);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for(let k of n.kids) {\r\n            this.renderNode(k, level);\r\n        }\r\n    }\r\n}\r\n"],"file":"../bundle-min.js"}