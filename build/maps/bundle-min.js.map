{"version":3,"sources":["main.js","generate.js","spread.js","render.js"],"names":["seed","density","render","canvas","editor","area","tickers","Set","t","go","tweenable","backCol","graphs","def0","props","renderConfig","type","levels","net","num","pos","ang","step","ease","pow","terms","min","max","dur","turn","children","def","stroke","fill","weightMult","weightAdd","mirror","size","weight","dif","var","setup","createCanvas","parent","background","strokeWeight","noFill","smooth","select","mouseClicked","reset","hide","console","log","fromEditor","_def","JSON","parse","value","generateSimple","int","random","randomSeed","noiseSeed","k","Graph","push","stringify","replacer","RenderCurves","key","val","Math","floor","draw","g","root","update","moveNode","makeGroup","dad","graph","i","n","Node","ix","nrm","kids","depth","count","anchor","rot","init","j","length","[object Object]","args","this","rnd","windowWidth","windowHeight","curves","tw","isNaN","parseCurve","prop","Object","entries","x","base","time","ti","p","abs","sin","PI","noise","pick","opts","mousePressed","keyTyped","document","activeElement","getElementById","gt","getTime","saveCanvas","generate","style","show","contrast","f","constrain","now","Date","getFullYear","toString","substring","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","generateWithBudget","total","angles","dn","budget","neo","a1","baseNum","TWO_PI","width","height","c","out","ts","split","ps","parseFloat","trm","_mirror","cos","drawNode","line","ellipse","df","lv","hasOwnProperty","sizeAdd","sizeMult","renderNode","level","noStroke","bezier","prv","nxt","sz","hlf","anc","pts"],"mappings":"AAAA,IAEIA,KACAC,QAEAC,OACAC,OAAQC,OAAQC,KANhBC,QAAU,IAAIC,IACdC,EAAI,EAGJC,IAAK,EAGLC,UAAY,CAAC,OAAQ,OAAQ,OAAQ,UACrCC,QAAU,UAKVC,OAAS,GAETC,KAAO,CACPC,MAAS,CACLZ,OAAU,SACVa,aAAgB,CAAEC,KAAQ,SAAUC,OAAU,CAAC,CAAC,YAAa,GAAI,CAAC,uBAAwB,MAE9FC,IAAO,CACHF,KAAQ,MAAOG,IAAO,GAAIC,IAAO,CAAE,IAAK,KAAOC,IAAO,EAAGC,KAAQ,CAACC,KAAO,OAAQC,KAAQ,EAAGC,MAAS,kBAAmBC,IAAO,GAAIC,IAAO,IAAKC,IAAO,KAAMC,KAAQ,KAAK,GAAIC,SAAY,KAM7LC,IAAM,CACRjB,MAAS,CACPZ,OAAU,CACRe,OAAU,CACR,CACED,KAAQ,OACRgB,OAAU,YACVC,KAAQ,YACRC,WAAc,EACdC,UAAa,MAKrBjB,IAAO,CACL,CACEC,IAAO,EACPH,KAAQ,MACRoB,QAAU,EACVC,KAAQ,GACRC,OAAU,EACVhB,KAAQ,IACRO,KAAQ,CACNH,IAAO,EACPa,IAAO,KACPd,MAAS,MAEXK,SAAY,CACV,CACEX,IAAO,GACPH,KAAQ,MACRoB,QAAU,EACVC,KAAQ,GACRC,OAAU,EACVhB,KAAQ,CACNI,IAAO,GACPa,IAAO,IACPd,MAAS,MACTF,KAAQ,OACRC,IAAO,EACPI,IAAO,KAETC,KAAQ,CACNH,IAAO,EACPa,IAAO,KACPC,IAAO,KACPf,MAAS,KACTD,IAAO,EACPI,IAAO,KAETE,SAAY,KAyBhBV,IAAO,CACL,MACA,QAQR,SAASqB,SACLtC,OAASuC,aAAa,KAAM,OACrBC,OAAO,aACdC,WAAWjC,SAEXqB,OAAO,EAAG,KACVa,aAAa,GAEbC,SACAC,SAIA3C,OAAS4C,OAAO,WAChB3C,KAAO2C,OAAO,gBACDA,OAAO,WACbC,aAAc,WAAYC,OAAM,KACxBF,OAAO,aACbC,aAAc,WAAYC,OAAM,KAEzC9C,OAAO+C,OAEPD,OAAO,GAEPE,QAAQC,IAAI,SAGhB,SAASH,MAAMI,GAEb,IAAIC,EAEAA,EADDD,EACQE,KAAKC,MAAMpD,KAAKqD,SAEhBC,iBAGXf,WAAWjC,SACXH,EAAI,EACJR,KAAO4D,IAAIC,OAAO,SAClBC,WAAW9D,MACX+D,UAAU/D,MAEVY,OAAS,GAET,IAAIoD,EAAI,IAAIC,MAAOV,GACnB3C,OAAOsD,KAAKF,GAEZ3D,KAAKqD,MAAOF,KAAKW,UAAUZ,EAAMa,SAAU,IAE3ClE,OAAS,IAAImE,aAAad,GAI5B,SAASa,SAASE,EAAKC,GACnB,MAAkB,iBAAT,EAA0BC,KAAKC,MAAU,IAAJF,GAAS,IAChDA,EAKX,SAASG,OACP,GAAGjE,GAAI,CACHmC,WAAWjC,SACX,IAAI,IAAIgE,KAAK/D,OACT+D,EAAEC,KAAKC,SACPC,SAASH,EAAEC,MACX1E,OAAOA,OAAOyE,EAAEC,MAGpBpE,KAMN,SAASuE,UAAUJ,EAAGK,EAAKC,GAEvB,IAAI,IAAIC,EAAE,EAAGA,EAAEP,EAAExD,IAAK+D,IAAK,CACvB,IAAIC,EAAI,IAAIC,KAgCZ,GA/BAD,EAAEE,GAAKH,EACPC,EAAEG,IAAe,GAATX,EAAExD,IAAW,EAAK,EAAKwD,EAAK,IAAKO,EACzCC,EAAExC,OAASqC,EACXG,EAAExC,OAAO4C,KAAKrB,KAAKiB,GACnBA,EAAEK,MAAQR,EAAIQ,MAAM,EACpBL,EAAEF,MAAQA,EAEVA,EAAMQ,QACNR,EAAMO,MAAQhB,KAAK7C,IAAIsD,EAAMO,MAAOL,EAAEK,OAGzB,SAAVb,EAAE3D,MAAmBkE,EAAI,EACxBC,EAAEO,OAASV,EAAIO,KAAKL,EAAE,GAEtBC,EAAEO,OAASV,EAKfG,EAAEnE,KAAO2D,EAAE3D,KACXmE,EAAEQ,IAAM,EACRR,EAAEtD,KAAO8C,EAAE9C,KACXsD,EAAE7D,KAAOqD,EAAErD,KACX6D,EAAE/C,OAASuC,EAAEvC,OACb+C,EAAE9C,KAAOsC,EAAEtC,KACX8C,EAAE7C,OAASqC,EAAErC,OACb6C,EAAElD,KAAO0C,EAAE1C,KACXkD,EAAEnD,OAAS2C,EAAE3C,OAEbmD,EAAES,OAECjB,EAAE7C,SACD,IAAI,IAAI+D,EAAE,EAAGA,EAAElB,EAAE7C,SAASgE,OAAQD,IAC9Bd,UAAUJ,EAAE7C,SAAS+D,GAAIV,EAAGF,IAS5C,MAAMhB,MACJ8B,YAAYC,EAAO,IACjBC,KAAKZ,GAAKzE,OAAOkF,OACjBG,KAAKR,MAAQ,EACbQ,KAAKT,MAAQ,EAEbS,KAAKrB,KAAO,IAAIQ,KAAM,CAAChE,IAAK4E,EAAK9E,IAAI,GAAGE,MACxC,IAAI,IAAI8D,EAAE,EAAGA,EAAEc,EAAK9E,IAAI4E,OAAQZ,IAC5BH,UAAUiB,EAAK9E,IAAIgE,GAAIe,KAAKrB,KAAMqB,MAEtCA,KAAKrB,KAAKgB,OAEVxC,QAAQC,IAAI,QAAS4C,OAKzB,MAAMb,KACFW,YAAYC,EAAO,IAEfC,KAAKZ,GAAKW,EAAKX,IAAM,EACrBY,KAAKX,IAAMU,EAAKV,KAAO,EACvBW,KAAKC,IAAMF,EAAKE,KAAO1B,KAAKX,SAC5BoC,KAAK7E,IAAM4E,EAAK5E,KAAO,CAAC+E,YAAc,EAAGC,aAAe,GACxDH,KAAK3E,KAAO0E,EAAK1E,MAAQ,GACzB2E,KAAKpE,KAAOmE,EAAKnE,MAAQ,EACzBoE,KAAKN,IAAMK,EAAKL,KAAO,EACvBM,KAAK7D,OAAS4D,EAAK5D,SAAU,EAC7B6D,KAAK5D,KAAO2D,EAAK3D,MAAQ,GACzB4D,KAAK3D,OAAS0D,EAAK1D,QAAU,EAC7B2D,KAAKT,MAAQQ,EAAKR,OAAS,EAC3BS,KAAKhE,KAAO+D,EAAK/D,MAAQ,UACzBgE,KAAKjE,OAASgE,EAAKhE,QAAU,EAG7BiE,KAAKhB,MAAQe,EAAKf,OAAS,KAC3BgB,KAAKtD,OAASqD,EAAKrD,QAAU,KAC7BsD,KAAKP,OAASM,EAAKN,QAAU,KAC7BO,KAAKV,KAAOS,EAAKT,MAAQ,GAEzBU,KAAKI,OAAS,GAIlBN,OACI,IAAK,IAAIO,KAAM5F,UACP6F,MAAMN,KAAKK,MACXL,KAAKI,OAAOC,GAAME,WAAWP,KAAKK,GAAKL,OAI/C,IAAI,IAAIjC,KAAKiC,KAAKV,KACdvB,EAAE4B,OAIVG,SACI,IAAI,IAAKU,EAAMlC,KAAQmC,OAAOC,QAAQV,KAAKI,QAAS,CAChD,IAAIO,EAAIrC,EAAIsC,KAEZ,GAAGtC,EAAI3C,IAAM,GAAK2C,EAAIuC,KAAO,EAAG,CAC5B,IAAIC,EAAKtC,MAAMjE,GAAK+D,EAAI3C,IAAI,IAAM,GAAK,EAAIpB,GAAK+D,EAAI3C,IAAI,GAAM2C,EAAI3C,IAAI,EAAMpB,GAAK+D,EAAI3C,IAAI,GACzFgF,GAAM,EAAIrC,EAAI3C,IAAOmF,EAAKxC,EAAIuC,KAG/BF,EAAI,IAAGA,EAAkB,GAAdnC,MAAMmC,EAAE,GAAUA,EAAE,EAAI,EAAKA,EAAE,GAI7CX,KAAKQ,GAAQlC,EAAI7C,IAAMH,KAAKgD,EAAIhD,KAAMqF,EAAGrC,EAAI/C,KAAO+C,EAAIhC,IAI5D,IAAI,IAAIyB,KAAKiC,KAAKV,KACdvB,EAAEa,UAMd,SAAStD,KAAKP,EAAM4F,EAAGI,GACnB,MAAW,UAARhG,EACQgG,EAAI,EAAI,EAAIxC,KAAKhD,IAAI,EAAEoF,EAAGpC,KAAKyC,IAAID,IAAMxC,KAAKhD,IAAIoF,EAAGpC,KAAKyC,IAAID,IACtD,MAARhG,EAGJ4F,EAAI,GAAsF,IAAzEI,EAAI,EAAI,EAAIxC,KAAKhD,IAAI,EAAI,EAAFoF,EAAKpC,KAAKyC,IAAID,IAAMxC,KAAKhD,IAAM,EAAFoF,EAAKpC,KAAKyC,IAAID,KACwB,IAAjG,GAAKA,EAAI,EAAI,EAAIxC,KAAKhD,IAAI,GAAG,EAAU,GAAPoF,EAAE,KAASpC,KAAKyC,IAAID,IAAMxC,KAAKhD,IAAI,EAAU,GAAPoF,EAAE,IAAQpC,KAAKyC,IAAID,MAAc,GACrG,QAARhG,GACP4F,EAAIA,EAAI,GAAU,EAAJA,EAAQ,EAAY,GAAPA,EAAE,IACtBI,EAAI,EAAI,EAAIxC,KAAKhD,IAAI,EAAEoF,EAAGpC,KAAKyC,IAAID,IAAMxC,KAAKhD,IAAIoF,EAAGpC,KAAKyC,IAAID,KACtD,QAARhG,EAC0B,GAA1BwD,KAAK0C,IAAIN,EAAEI,EAAExC,KAAK2C,GAAG,GAAW,GACxB,SAARnG,EACAoG,MAAQ,GAAFR,GAENA,EAKf,SAASS,QAAQC,GACb,OAAOA,EAAK7C,MAAMZ,OAAOyD,EAAKxB,UAIlC,SAASyB,gBAIT,SAASC,WACL,GAAIC,SAASC,gBAAkBD,SAASE,eAAe,eAEvD,GAAY,MAARrD,IACA7D,IAAMA,GACN2C,QAAQC,IAAI,KAAM5C,SACf,GAAY,MAAR6D,IACPpB,OAAM,QACH,GAAY,MAARoB,IAAa,CACpB,IAAIsD,EAAKC,UACTC,WAAW,MAAQF,EAAK,YAET,MAARtD,IACPyD,WACe,MAARzD,MACwB,SAA3BlE,OAAO4H,MAAM,WAAuB5H,OAAO+C,OAC1C/C,OAAO6H,QAMpB,SAASC,SAAS/C,EAAGgD,GACnB,OAAOC,UAAUD,GAAGhD,EAAE,IAAO,GAAK,EAAG,GAGvC,SAAS0C,UACP,IAAIQ,EAAM,IAAIC,KACd,OAAOD,EAAIE,cAAcC,WAAWC,UAAU,EAAE,IACzCJ,EAAIK,WAAa,GAAGF,WAAWG,SAAS,EAAG,KAC3CN,EAAIO,UAAWJ,WAAWG,SAAS,EAAG,KAAO,IAC7CN,EAAIQ,WAAYL,WAAWG,SAAS,EAAG,KACvCN,EAAIS,aAAcN,WAAWG,SAAS,EAAG,KACzCN,EAAIU,aAAcP,WAAWG,SAAS,EAAG,KASlD,SAASK,qBACL,IACIC,EAAQ,EACRC,EAAS,CAAC/B,GAAG,EAAGA,GAAO,EAAHA,IACpBpF,EAAM,CACNjB,MAAM,CACFZ,OAAQ,CAAEe,OAAQ,CACd,CAACD,KAAK,OAAQgB,OAAQ,UAAWE,WAAW,EAAGC,UAAU,GACzD,CAACnB,KAAK,SAAUgB,OAAQ,YAAaG,UAAU,GAC/C,CAACnB,KAAK,SAAUgB,OAAO,YAAaM,OAAO,MAInDpB,IAAI,IAEJ8D,EAAMjD,EAAIb,IACViI,EAAK,EAET,KAAMF,EAAQG,KAAY,CACtB,IAAIjI,EAAMqD,KAAKC,MAAoC,GAA7BD,KAAKhD,IAAIgD,KAAKX,SAAU,IAAY,EAC1D,KAAMoF,EAAQE,EAAGhI,EAnBR,KAmBwBA,EAAM,GACnCA,IAGJ,IAAIkI,EAAM,CACNlI,IAAKA,EACLH,KAAMwD,KAAKX,SAAW,GAAM,MAAQ,QACpCvC,KAAM,CAAEI,IAAoB,IAAhB8C,KAAKX,SAAiB,GAAItB,IAAI,GAC1CV,KAAM,CAAEH,IAAIyF,GAAG,EAAG5E,IAAI2G,EAAO1E,KAAKC,MAAMZ,OAAOqF,EAAOpD,WACtD1D,OAAQjB,EAAM,GAAK,EACnBmB,OAAQ,CAAEZ,IAAI,EAAGa,IAAI,EAAGd,MAAM,SAC9BY,KAAM,CAAEX,IAAI,GAAIa,IAAI,GAAId,MAAM,SAC9BK,SAAS,IAEbkD,EAAId,KAAKmF,GACTJ,GAASE,EAAKhI,EAEXqD,KAAKX,SAAW,KAEfmB,EAAMqE,EAAIvH,SACVqH,GAAMhI,GAUd,OAHAY,EAAIb,IAAI,GAAGE,IAAM,CAAC+E,YAAY,EAAGC,aAAa,GAGvCrE,EAGX,SAAS4B,iBACL,IAAI2F,EAAKzF,OAAO,GAAKsD,GAAG,GACpBoC,EAAU3F,IAAIC,OAAO,EAAE,IACvB9B,EAAM,CACVjB,MAAM,CACFZ,OAAQ,CAAEe,OAAQ,CACd,CAACD,KAAK,QAASgB,OAAQ,YAAaC,KAAM,YAAaC,WAAW,EAAGC,UAAU,MAIvFjB,IAAI,CACI,CACIC,IAAIoI,EACJvI,KAAK,MACLoB,QAAO,EACPC,KAAM,GACNC,OAAQ,EACRhB,KAAM,IAENO,KAAK,CAAEH,IAAI,EAAGa,IAAIiH,OAAQ/H,MAAM,MAChCK,SAAS,CACL,CACIX,IAAIoI,EACJvI,KAAK,MACLoB,OAAOmH,EAAQ,GAAK,GAAI1F,OAAO,GAAK,GACpCxB,KAAM,GACNC,OAAQ,EACRhB,KAAK,CAAEI,IAAI,IAAKa,IAAI,EAAGd,MAAM,KAAMF,KAAK,OAAQC,IAAI,GACpDK,KAAK,CAAEH,IAAI,EAAGa,IAAIsB,OAAO,EAAG2F,QAAS/H,MAAM,KAAMF,KAAK,OAAQC,IAAI,GAElEM,SAAS,CACL,CACIX,IAAIyC,IAAI,GAAG2F,GACXvI,KAAK,MACLoB,QAAO,EACPC,KAAM,EACNC,OAAQ,EACRhB,KAAK,CAAEI,IAAI,GAAIa,IAAI,IAAKd,MAAM,MAAM4F,KAAK,EAAE,EAAE,EAAE,GAAI9F,KAAK,OAAQC,IAAIqC,QAAQ,EAAG,IAC/EhC,KAAK,CAAEH,IAAI,EAAGa,IAAI8E,KAAK,KAAM,KAAM,KAAM,GAAI5F,MAAM,MAEnDK,SAAS,IAIb,CACIX,IAAIyC,IAAI,GAAG2F,GACXvI,KAAK,MACLoB,QAAO,EACPC,KAAM,EACNC,OAAQ,EACRhB,KAAK,CAAEI,IAAI,GAAIa,IAAI,EAAGd,MAAM,MAAM4F,KAAK,EAAE,EAAE,EAAE,GAAI9F,KAAK,OAAQC,IAAIqC,QAAQ,EAAG,IAC7EhC,KAAK,CAAEH,IAAI,EAAGa,IAAI8E,KAAK,KAAM,KAAM,KAAM,GAAI5F,MAAM,MAEnDK,SAAS,UAerC,OAJAsB,QAAQC,IAAI,MAAOiG,EAAInC,GAAG,EAAEmC,EAAQ,GAAHA,GAEjCvH,EAAIb,IAAI,GAAGE,IAAM,CAACqI,MAAM,EAAGC,OAAO,GAClCtG,QAAQC,IAAIoG,MAAOC,QACZ3H,EAIX,SAASyE,WAAWmD,EAAGxE,GACnBwE,EAAElI,MAAQkI,EAAElI,OAAS,KAErB,IAAImI,EAAM,GACVA,EAAIrI,KAAOoI,EAAEpI,MAAQ,OACrBqI,EAAIpI,IAAMmI,EAAEnI,KAAO,EACnBoI,EAAIlI,IAAMiI,EAAEjI,KAAO,EAEnBkI,EAAIrH,IAAMoH,EAAEpH,KAAO,EAEnBqH,EAAIhI,IAAM+H,EAAE/H,KAAO,EAEnBgI,EAAI/C,KAAO,EACX+C,EAAI9C,KAAO,EAEX,IAAI+C,EAAKF,EAAElI,MAAMqI,MAAM,KACvB,IAAI,IAAItJ,KAAKqJ,EAAI,CACb,IAAIE,EAAKvJ,EAAEsJ,MAAM,KACjB,GAAY,KAATC,EAAG,IAAsB,QAATA,EAAG,GAClBH,EAAI9C,KAAOiD,EAAGjE,OAAS,EAAIkE,WAAWD,EAAG,IAAM,OAC5C,GAAY,OAATA,EAAG,GACTH,EAAI9C,KAAOiD,EAAGjE,OAAS,EAAIX,EAAEG,IAAM0E,WAAWD,EAAG,IAAM5E,EAAEG,QACtD,CACH,IAAI2E,EAAM,EACV,IAAI,IAAIjD,KAAK+C,EACKE,GAAN,MAALjD,EAAkB7B,EAAEG,IACV,OAAL0B,EAAmB7B,EAAEe,IAChB,SAALc,EAAqBI,MAAMjC,EAAExC,OAAO2C,IAAKH,EAAEG,KACtC,OAAL0B,EAAmB7B,EAAExC,OAAO2C,IACvB,QAAL0B,EAAoB7B,EAAExC,OAAOuD,IACxB,SAALc,EAAqB7B,EAAEK,MAClB,UAALwB,EAAsB7B,EAAEF,MAAMO,MAAQL,EAAEK,MACnC,aAALwB,EAAyB,EAAE7B,EAAEF,MAAMO,MAAQL,EAAEK,MACxC,cAALwB,EAA0B,EAAI,EAAE7B,EAAEF,MAAMO,MAAQL,EAAEK,MAC9CwE,WAAWhD,GAE3B4C,EAAI/C,MAAQoD,GAKpB,OAAOL,EAGX,SAAS9E,SAASK,GACd,GAAgB,OAAbA,EAAEO,OAAiB,CAGlB,IAAIwE,GAA8B,MAAnB/E,EAAExC,OAAO+C,QAAkBP,EAAExC,OAAOP,QAAU+C,EAAExC,OAAO+C,OAAOL,GAAG,GAAK,IAAOF,EAAE/C,QAAU+C,EAAExC,OAAO0C,GAAG,GAAK,GAEzHF,EAAEQ,IAAMuE,EAAS/E,EAAExC,OAAOgD,IAAMR,EAAEtD,KAAOsD,EAAExC,OAAOgD,IAAMR,EAAEtD,KAE1DsD,EAAE/D,IAAM,CACJ+D,EAAEO,OAAOtE,IAAI,GAAK+D,EAAE7D,KAAO6I,IAAIhF,EAAEQ,KACjCR,EAAEO,OAAOtE,IAAI,GAAK+D,EAAE7D,KAAO4F,IAAI/B,EAAEQ,MAMzC,IAAI,IAAI3B,KAAKmB,EAAEI,KACXT,SAASd,GA6CjB,SAASoG,SAASjF,GACC,MAAZA,EAAEO,QAAgB2E,KAAKlF,EAAEO,OAAOtE,IAAI,GAAI+D,EAAEO,OAAOtE,IAAI,GAAI+D,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,IAC5EkJ,QAAQnF,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,GAAI,GAAI,IAEhC,IAAI,IAAI4C,KAAKmB,EAAEI,KACX6E,SAASpG,GAIjB,MAAMK,aACF0B,YAAYwE,EAAK,IACb,IAAIvE,EAAOuE,EAAGzJ,MAAMZ,QAAU,GAE9B+F,KAAKjF,KAAMgF,EAAKhF,MAAQ,OACxBiF,KAAKhF,OAAS+E,EAAK/E,QAAU,CAAC,CAACe,OAAO,EAAGM,OAAO,IAChD,IAAI,IAAIkI,KAAMvE,KAAKhF,OACVuJ,EAAGC,eAAe,UAASD,EAAGxJ,KAAOiF,KAAKjF,MAC1CwJ,EAAGC,eAAe,YAAWD,EAAGxI,OAAS,GACzCwI,EAAGC,eAAe,UAASD,EAAGvI,KAAO,WACrCuI,EAAGC,eAAe,eAAcD,EAAGrI,UAAY,GAC/CqI,EAAGC,eAAe,gBAAeD,EAAGtI,WAAa,GACjDsI,EAAGC,eAAe,aAAYD,EAAGE,QAAU,GAC3CF,EAAGC,eAAe,cAAaD,EAAGG,SAAW,GAGtDvH,QAAQC,IAAI,cAAe4C,KAAKjF,MAGpC+E,OAAOZ,GACH,IAAI,IAAIqF,KAAMvE,KAAKhF,OAMfgF,KAAK2E,WAAWzF,EAAGqF,GAI3BzE,WAAWZ,EAAG0F,GAKV,GAHA/H,SACAgI,WAEgB,UAAbD,EAAM7J,MACL,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAO,EAAG9B,IAAK,CACjC,IAAI+F,EAAK,CACL5E,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,IAAM,EAC/D+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,IAAM,EAC/D+D,EAAEI,KAAKvB,GAAG5C,IAAI,GACd+D,EAAEI,KAAKvB,GAAG5C,IAAI,GACd+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,EAC7D+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAEjEY,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1D4I,OAAOhB,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,UAGhE,GAAgB,iBAAbc,EAAM7J,MACZ,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAAK,CAC/B,IAAIgH,EAAS,GAAHhH,EAAOmB,EAAEI,KAAKO,OAAO,EAAI9B,EAAE,EACjCiH,EAAMjH,GAAGmB,EAAEI,KAAKO,OAAO,EAAI,EAAI9B,EAAE,EACjC+F,EAAK,CACL5E,EAAEI,KAAKyF,GAAK5J,IAAI,IAAM+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKyF,GAAK5J,IAAI,IAAM,EAC/D+D,EAAEI,KAAKyF,GAAK5J,IAAI,IAAM+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKyF,GAAK5J,IAAI,IAAM,EAC/D+D,EAAEI,KAAKvB,GAAG5C,IAAI,GACd+D,EAAEI,KAAKvB,GAAG5C,IAAI,GACd+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAK0F,GAAK7J,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,EAC7D+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAK0F,GAAK7J,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAEjEY,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1D4I,OAAOhB,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,UAGhE,GAAgB,WAAbc,EAAM7J,MACZ,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAC1BhC,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1DkI,KAAKlF,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,SAGlF,GAAgB,QAAbyJ,EAAM7J,KACZ,IAAI,IAAIgD,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAC1BhC,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1DkI,KAAKlF,EAAEI,KAAKvB,GAAG0B,OAAOtE,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG0B,OAAOtE,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,SAGxF,GAAgB,WAAbyJ,EAAM7J,KACZ,IAAI,IAAIgD,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAAK,CAC/B,IAAIkH,EAAK/F,EAAEI,KAAKvB,GAAG3B,KAAOwI,EAAMF,SAAWE,EAAMH,QACjDzI,KAAmB,QAAd4I,EAAM5I,KAAiBkD,EAAEI,KAAKvB,GAAG/B,KAAO4I,EAAM5I,MACnDD,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1DmI,QAASnF,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI8J,EAAIA,QAEjD,GAAgB,QAAbL,EAAM7J,MACb,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAC1BhC,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1D4I,OAAO5F,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,SAG5H,GAAgB,YAAbyJ,EAAM7J,MACZ,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAAK,CAC/B,IAAImH,EAAM,EAAGhG,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAC/FgK,EAAM,CAAGjG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GAAKhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,IACpFnJ,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1D4I,OAAO5F,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAIgK,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIjG,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,UAGpH,GAAgB,SAAbyJ,EAAM7J,MACZ,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAAK,CAC/B,IAAImH,EAAM,EAAGhG,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAC/FgK,EAAM,CACLjG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GAAKhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GACvEhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GAAKhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,IAE5EnJ,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1D4I,OAAO5F,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAIgK,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIjG,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,UAGnH,GAAgB,UAAbyJ,EAAM7J,MACb,GAAGmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAQ9B,IAAK,CAC/B,IAAImH,EAAM,EAAGhG,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAC/FiK,EAAM,CACLlG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GAAKhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GACvEhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,GAAKhG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAK+J,EAAI,GAAMA,EAAI,IAE5EnJ,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1DF,KAAmB,QAAd4I,EAAM5I,KAAiBkD,EAAEI,KAAKvB,GAAG/B,KAAO4I,EAAM5I,MACnD8I,OAAOM,EAAI,GAAIA,EAAI,GAAIlG,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAIiK,EAAI,GAAIA,EAAI,IACnHN,OAAOM,EAAI,GAAIA,EAAI,GAAIlG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,GAAIiK,EAAI,GAAIA,EAAI,UAI/G,GAAgB,SAAbR,EAAM7J,MACVmE,EAAEI,KAAKO,OAAS,EACf,IAAI,IAAI9B,EAAE,EAAGA,EAAEmB,EAAEI,KAAKO,OAAO,EAAG9B,IAAK,CACjC,IAAIqH,EAAM,CACNlG,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,EAAG+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,EAC7H+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,EAAG+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM+D,EAAEI,KAAKvB,EAAE,GAAG5C,IAAI,GAAK+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAAM,GAEjIY,OAAuB,QAAhB6I,EAAM7I,OAAmBmD,EAAEI,KAAKvB,GAAGhC,OAAS6I,EAAM7I,QACzDa,aAAcsC,EAAEI,KAAKvB,GAAG1B,OAASuI,EAAM3I,WAAa2I,EAAM1I,WAC1DF,KAAmB,QAAd4I,EAAM5I,KAAiBkD,EAAEI,KAAKvB,GAAG/B,KAAO4I,EAAM5I,MACnD8I,OAAO5F,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,GAAIiK,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIlG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAC3F2J,OAAO5F,EAAE/D,IAAI,GAAI+D,EAAE/D,IAAI,GAAIiK,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIlG,EAAEI,KAAKvB,GAAG5C,IAAI,GAAI+D,EAAEI,KAAKvB,GAAG5C,IAAI,IAOvG,IAAI,IAAI4C,KAAKmB,EAAEI,KACXU,KAAK2E,WAAW5G,EAAG6G","sourcesContent":["var tickers = new Set();\r\nvar t = 0;\r\nvar seed;\r\nvar density;\r\nvar go = true;\r\nvar render;\r\nvar canvas, editor, area;\r\nvar tweenable = [\"step\", \"turn\", \"size\", \"weight\"];\r\nvar backCol = \"#000000\";\r\n\r\n// pi/2 = 1.5707\r\n// pi/3 = 1.047\r\n// pi/4 = 0.7853\r\nvar graphs = [];\r\n\r\nvar def0 = {\r\n    \"props\": {\r\n        \"render\": \"curves\",\r\n        \"renderConfig\": { \"type\": \"petals\", \"levels\": [['#FFCC0088', 8], ['rgba(255, 0, 0, 0.1)', 4]] }\r\n    },\r\n    \"net\": {\r\n        \"type\": \"fan\", \"num\": 35, \"pos\": [ 500, 400 ], \"ang\": 0, \"step\": {\"ease\":\"sine\", \"pow\": -3, \"terms\": \"noise*0.8+t*0.2\", \"min\": 30, \"max\": 480, \"dur\": 200}, \"turn\": 6.28/35, \"children\": [\r\n            //{ \"type\": \"chain\", \"num\": 3,  \"step\": 40, \"turn\": 0.5 }\r\n        ]\r\n    }\r\n};\r\n\r\nvar def = {\r\n  \"props\": {\r\n    \"render\": {\r\n      \"levels\": [\r\n        {\r\n          \"type\": \"tree\",\r\n          \"stroke\": \"#00000088\",\r\n          \"fill\": \"#00000033\",\r\n          \"weightMult\": 0,\r\n          \"weightAdd\": 1\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"net\": [\r\n    {\r\n      \"num\": 4,\r\n      \"type\": \"fan\",\r\n      \"mirror\": true,\r\n      \"size\": 72,\r\n      \"weight\": 1,\r\n      \"step\": 300,\r\n      \"turn\": {\r\n        \"min\": 0,\r\n        \"dif\": 3.14,\r\n        \"terms\": \"ix\"\r\n      },\r\n      \"children\": [\r\n        {\r\n          \"num\": 12,\r\n          \"type\": \"fan\",\r\n          \"mirror\": true,\r\n          \"size\": 36,\r\n          \"weight\": 1,\r\n          \"step\": {\r\n            \"min\": 30,\r\n            \"dif\": 150,\r\n            \"terms\": \"tix\",\r\n            \"ease\": \"none\",\r\n            \"pow\": 3,\r\n            \"dur\": 200\r\n          },\r\n          \"turn\": {\r\n            \"min\": 0,\r\n            \"dif\": 3.14,\r\n            \"var\": 1.04,\r\n            \"terms\": \"ix\",\r\n            \"pow\": 2,\r\n            \"dur\": 200\r\n          },\r\n          \"children\": [\r\n            /*{\r\n              \"num\": 24,\r\n              \"type\": \"fan\",\r\n              \"mirror\": true,\r\n              \"size\": 6,\r\n              \"weight\": 1,\r\n              \"step\": {\r\n                \"min\": 100,\r\n                \"dif\": 200,\r\n                \"terms\": \"t*0.5+ix*0.5\",\r\n                \"ease\": \"hill\",\r\n                \"pow\": 3,\r\n                \"dur\": 200\r\n              },\r\n              \"turn\": {\r\n                \"min\": 0,\r\n                \"dif\": 4.85,\r\n                \"terms\": \"ix\"\r\n              },\r\n              \"children\": []\r\n          }*/\r\n          ]\r\n        }\r\n      ],\r\n      \"pos\": [\r\n        702.5,\r\n        479\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\n\r\n\r\nfunction setup() {\r\n    canvas = createCanvas(1080, 1080);//(windowWidth, windowHeight);\r\n    canvas.parent('container');\r\n    background(backCol);\r\n    //frameRate(30);\r\n    stroke(0, 128);\r\n    strokeWeight(3);\r\n    //fill(0, 32);\r\n    noFill();\r\n    smooth();\r\n\r\n\r\n\r\n    editor = select(\"#editor\");\r\n    area = select(\"#editor-area\");\r\n    let update = select(\"#update\");\r\n    update.mouseClicked( function(){ reset(true) } );\r\n    let generate = select(\"#generate\");\r\n    generate.mouseClicked( function(){ reset(false) } );\r\n\r\n    editor.hide();\r\n\r\n    reset( false );\r\n\r\n    console.log(\"setup\");\r\n}\r\n\r\nfunction reset(fromEditor) {\r\n  //let area = select(\"#editor-area\");\r\n  let _def;\r\n  if(fromEditor) {\r\n      _def = JSON.parse(area.value());\r\n  } else {\r\n      _def = generateSimple();\r\n  }\r\n  //tickers.clear();\r\n  background(backCol);\r\n  t = 0;\r\n  seed = int(random(999999));\r\n  randomSeed(seed);\r\n  noiseSeed(seed);\r\n\r\n  graphs = [];\r\n  //let _def = generate();\r\n  var k = new Graph( _def );\r\n  graphs.push(k);\r\n\r\n  area.value( JSON.stringify(_def, replacer, 2) );\r\n\r\n  render = new RenderCurves(_def);\r\n\r\n}\r\n\r\nfunction replacer(key, val) {\r\n    if(typeof(val) == \"number\") return Math.floor(val*100)/100;\r\n    return val;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  if(go) {\r\n      background(backCol);\r\n      for(let g of graphs) {\r\n          g.root.update();\r\n          moveNode(g.root);\r\n          render.render(g.root);\r\n      }\r\n\r\n      t++;\r\n\r\n      //if(t == 200) reset();\r\n  }\r\n}\r\n\r\nfunction makeGroup(g, dad, graph) {\r\n    //console.log(\"makeGroup\", g);\r\n    for(let i=0; i<g.num; i++) {\r\n        let n = new Node();\r\n        n.ix = i;\r\n        n.nrm = g.num == 1 ? 0 : (1 / (g.num)) * i;\r\n        n.parent = dad;\r\n        n.parent.kids.push(n);\r\n        n.depth = dad.depth+1;\r\n        n.graph = graph;\r\n\r\n        graph.count ++;\r\n        graph.depth = Math.max(graph.depth, n.depth);\r\n        //console.log(n);\r\n\r\n        if(g.type == \"chain\" && i > 0) {\r\n            n.anchor = dad.kids[i-1];\r\n        } else {\r\n            n.anchor = dad;\r\n        }\r\n\r\n        //n.turn = isNaN(g.turn) ? parseCurve(g.turn, n) : g.turn;// n.parent.turn + g.turn * n.ix;\r\n        //n.step = isNaN(g.step) ? parseCurve(g.step, n) : g.step;\r\n        n.type = g.type;\r\n        n.rot = 0;\r\n        n.turn = g.turn;\r\n        n.step = g.step;\r\n        n.mirror = g.mirror;\r\n        n.size = g.size;\r\n        n.weight = g.weight;\r\n        n.fill = g.fill;\r\n        n.stroke = g.stroke;\r\n\r\n        n.init();\r\n\r\n        if(g.children) {\r\n            for(let j=0; j<g.children.length; j++) {\r\n                makeGroup(g.children[j], n, graph);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/***** GRAPH *****/\r\nclass Graph {\r\n  constructor(args = {}) {\r\n    this.ix = graphs.length;\r\n    this.count = 0;\r\n    this.depth = 0;\r\n\r\n    this.root = new Node( {pos: args.net[0].pos} );\r\n    for(let i=0; i<args.net.length; i++){\r\n        makeGroup(args.net[i], this.root, this);\r\n    }\r\n    this.root.init();\r\n\r\n    console.log(\"graph\", this);\r\n  }\r\n}\r\n\r\n/***** NODE *****/\r\nclass Node {\r\n    constructor(args = {}) {\r\n        //properties\r\n        this.ix = args.ix || 0;\r\n        this.nrm = args.nrm || 0;\r\n        this.rnd = args.rnd || Math.random();\r\n        this.pos = args.pos || [windowWidth / 2, windowHeight / 2];\r\n        this.step = args.step || 30;\r\n        this.turn = args.turn || 0;\r\n        this.rot = args.rot || 0;\r\n        this.mirror = args.mirror || false;\r\n        this.size = args.size || 20;\r\n        this.weight = args.weight || 1;\r\n        this.depth = args.depth || 0;\r\n        this.fill = args.fill || \"#888888\";\r\n        this.stroke = args.stroke || 0;\r\n\r\n        // Node references\r\n        this.graph = args.graph || null;\r\n        this.parent = args.parent || null;\r\n        this.anchor = args.anchor || null;\r\n        this.kids = args.kids || [];\r\n\r\n        this.curves = {};\r\n\r\n    }\r\n\r\n    init() {\r\n        for (let tw of tweenable) {\r\n            if (isNaN(this[tw])) {\r\n                this.curves[tw] = parseCurve(this[tw], this);\r\n            }\r\n        }\r\n\r\n        for(let k of this.kids) {\r\n            k.init();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        for(let [prop, val] of Object.entries(this.curves)) {\r\n            let x = val.base;\r\n            //if(val.dur > 0) x += (1 / val.dur) * (t % (val.dur+1)) * val.time;\r\n            if(val.dur > 0 && val.time > 0) { // come and go\r\n                let ti = floor(t / (val.dur+1)) % 2 == 0 ? t % (val.dur+1) : (val.dur+1) - (t % (val.dur+1));\r\n                x += (1 / val.dur) * ti + val.time;\r\n            }\r\n            //if(x > 1) x %= 1;\r\n            if(x > 1) x = floor(x%2) == 0 ? x%1 : 1 - (x%1);\r\n            //if(prop == \"turn\") console.log(this.ix, x);\r\n\r\n\r\n            this[prop] = val.min + ease(val.ease, x, val.pow) * val.dif;\r\n            //this[prop] = val.min + ease(val.ease, x, val.pow) * val.var * this.ix;\r\n        }\r\n\r\n        for(let k of this.kids) {\r\n            k.update();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction ease(type, x, p) {\r\n    if(type == \"simple\") {\r\n        return p < 0 ? 1 - Math.pow(1-x, Math.abs(p)) : Math.pow(x, Math.abs(p));\r\n    } else if (type == \"IO\") {\r\n        //if(t < 0.5) return easeSimple(t*2, p) * 0.5;\r\n        //else return (1 - easeSimple(1-(t-0.5)*2, p)) * 0.5 + 0.5;\r\n        if(x < 0.5) return (p < 0 ? 1 - Math.pow(1-x*2, Math.abs(p)) : Math.pow(x*2, Math.abs(p))) * 0.5;\r\n        else return (1 - (p < 0 ? 1 - Math.pow(1-(1-(x-0.5)*2), Math.abs(p)) : Math.pow(1-(x-0.5)*2, Math.abs(p)))) * 0.5 + 0.5;\r\n    } else if (type == \"hill\") {\r\n        x = x < 0.5 ? x * 2 : 1 - (x-0.5)*2;\r\n        return p < 0 ? 1 - Math.pow(1-x, Math.abs(p)) : Math.pow(x, Math.abs(p));\r\n    } else if (type == \"sine\") {\r\n        return Math.sin(x*p*Math.PI*2) * 0.5 + 0.5;\r\n    } else if (type == \"noise\") {\r\n        return noise(x*16);\r\n    } else {\r\n        return x;\r\n    }\r\n\r\n}\r\n\r\nfunction pick(...opts) {\r\n    return opts[floor(random(opts.length))];\r\n}\r\n\r\n\r\nfunction mousePressed() {\r\n  //pen.set(mouseX, mouseY);\r\n}\r\n\r\nfunction keyTyped() {\r\n    if (document.activeElement === document.getElementById('editor-area')) return;\r\n\r\n    if (key === ' ') {\r\n        go = !go;\r\n        console.log(\"go\", go);\r\n    } else if (key === 'r') {\r\n        reset(false);\r\n    } else if (key === 's') {\r\n        let gt = getTime();\r\n        saveCanvas(\"TG-\" + gt + \".jpg\");\r\n        //saveJSON(defs, \"TG-\" + gt + \".jpg\", false);\r\n    } else if (key === 'g') {\r\n        generate();\r\n    } else if (key === 'e') {\r\n        if (editor.style(\"display\") == \"block\") editor.hide();\r\n        else editor.show();\r\n    }\r\n    // uncomment to prevent any default behavior\r\n    //return false;\r\n}\r\n\r\nfunction contrast(n, f) {\r\n  return constrain(f*(n-0.5) + 0.5, 0, 1);\r\n}\r\n\r\nfunction getTime() {\r\n  let now = new Date();\r\n  return now.getFullYear().toString().substring(2,4) +\r\n        (now.getMonth() + 1).toString().padStart(2, \"0\") +\r\n        (now.getDate()).toString().padStart(2, \"0\") + \"-\" +\r\n        (now.getHours()).toString().padStart(2, \"0\") +\r\n        (now.getMinutes()).toString().padStart(2, \"0\") +\r\n        (now.getSeconds()).toString().padStart(2, \"0\");\r\n}\r\n\r\n/*function windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n  canvas.parent('container');\r\n  background(\"#FFFFFF\");\r\n}*/\r\n","function generateWithBudget() {\r\n    let budget = 200;\r\n    let total = 0;\r\n    let angles = [PI/2, PI, PI*2];\r\n    let def = {\r\n        props:{\r\n            render: { levels: [\r\n                {type:\"tree\", stroke: '#999999', weightMult:0, weightAdd:1 },\r\n                {type:\"bezier\", stroke: '#00000088', weightAdd:4 },\r\n                {type:\"bezier\", stroke:'#FFFFFF88', weight:0} ]\r\n            }\r\n            //\"renderConfig\": { \"type\": \"tree\", \"levels\": [[0, 8], ['#FFFFFF', 4]] }\r\n        },\r\n        net:[]\r\n    };\r\n    let dad = def.net;\r\n    let dn = 1;\r\n\r\n    while(total < budget*0.8) {\r\n        let num = Math.floor( Math.pow(Math.random(), 2) * 10 ) + 2;\r\n        while(total + dn*num > budget && num > 1) {\r\n            num --;\r\n            //console.log(num, dn, total);\r\n        }\r\n        let neo = {\r\n            num: num,\r\n            type: Math.random() < 0.6 ? \"fan\" : \"chain\",\r\n            step: { min:Math.random() * 120 + 30, dif:0 },\r\n            turn: { min:PI/2, dif:angles[Math.floor(random(angles.length))] },\r\n            mirror: num % 2 == 0,\r\n            weight: { min:2, dif:2, terms:\"depth\" },\r\n            size: { min:10, dif:40, terms:\"depth\" },\r\n            children:[]\r\n        };\r\n        dad.push(neo);\r\n        total += dn * num;\r\n\r\n        if(Math.random() < 0.7) {\r\n            //console.log(\"child\", num, dn, total);\r\n            dad = neo.children;\r\n            dn *= num;\r\n\r\n        } else {\r\n            //console.log(\"sibling\", num, dn, total);\r\n        }\r\n    }\r\n\r\n    def.net[0].pos = [windowWidth/2, windowHeight/2];\r\n\r\n    //console.log(total, def);\r\n    return def;\r\n}\r\n\r\nfunction generateSimple() {\r\n    let a1 = random(0.1, PI/2);//PI/2;\r\n    let baseNum = int(random(4,8));\r\n    let def = {\r\n    props:{\r\n        render: { levels: [\r\n            {type:\"daisy\", stroke: '#FFFFFFCC', fill: '#000000FF', weightMult:0, weightAdd:2 },\r\n            //{type:\"circles\", stroke: '#00000088', fill: '#00000011'}\r\n        ] }\r\n    },\r\n    net:[\r\n            {\r\n                num:baseNum,\r\n                type:\"fan\",\r\n                mirror:true,\r\n                size: 72,\r\n                weight: 0,\r\n                step: 120,\r\n                //turn:{ min:PI/2+a1, dif:-a1*4, terms:\"ix\" },\r\n                turn:{ min:0, dif:TWO_PI, terms:\"ix\" },\r\n                children:[\r\n                    {\r\n                        num:baseNum,\r\n                        type:\"fan\",\r\n                        mirror:baseNum%2 == 0 ? random(1) < 0.5 : false,\r\n                        size: 36,\r\n                        weight: 8,\r\n                        step:{ min:180, dif:0, terms:\"ix\", ease:\"none\", pow:1 },\r\n                        turn:{ min:0, dif:random(2, TWO_PI), terms:\"ix\", ease:\"none\", pow:2 },\r\n                        //turn:{ min:0, dif:TWO_PI, terms:\"ix\" },\r\n                        children:[\r\n                            {\r\n                                num:int(32/baseNum),\r\n                                type:\"fan\",\r\n                                mirror:false,\r\n                                size: 6,\r\n                                weight: 4,\r\n                                step:{ min:60, dif:180, terms:\"ix*\"+pick(1,2,3,4), ease:\"hill\", pow:random(-4, 4)},\r\n                                turn:{ min:0, dif:pick(1.78, 3.14, 6.28, 8), terms:\"ix\" },\r\n                                //turn:{ min:0, dif:TWO_PI, terms:\"ix\" },\r\n                                children:[\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                num:int(16/baseNum),\r\n                                type:\"fan\",\r\n                                mirror:false,\r\n                                size: 6,\r\n                                weight: 4,\r\n                                step:{ min:60, dif:0, terms:\"ix*\"+pick(1,2,3,4), ease:\"hill\", pow:random(-4, 4)},\r\n                                turn:{ min:0, dif:pick(1.78, 3.14, 6.28, 8), terms:\"ix\" },\r\n                                //turn:{ min:0, dif:TWO_PI, terms:\"ix\" },\r\n                                children:[\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n    console.log(\"GEN\", a1, PI/2+a1, -a1*4 );\r\n\r\n    def.net[0].pos = [width/2, height/2];\r\n    console.log(width, height);\r\n    return def;\r\n\r\n}\r\n","function parseCurve(c, n) {\r\n    c.terms = c.terms || \"ix\";\r\n\r\n    let out = {};\r\n    out.ease = c.ease || \"none\";\r\n    out.pow = c.pow || 2;\r\n    out.min = c.min || 0;\r\n    //out.max = c.max || 1;\r\n    out.dif = c.dif || 0;\r\n    //out.var = c.var || c.dif / n.parent.kids.length;\r\n    out.dur = c.dur || 0;\r\n\r\n    out.base = 0;\r\n    out.time = 0;\r\n\r\n    let ts = c.terms.split('+')\r\n    for(let t of ts) {\r\n        let ps = t.split('*');\r\n        if(ps[0] == 't' || ps[0] == 'time') {\r\n            out.time = ps.length > 1 ? parseFloat(ps[1]) : 1;\r\n        } else if(ps[0] == 'tix') {\r\n            out.time = ps.length > 1 ? n.nrm * parseFloat(ps[1]) : n.nrm;\r\n        } else {\r\n            let trm = 1;\r\n            for(let p of ps) {\r\n                if(p == \"ix\") trm *= n.nrm;\r\n                else if(p == \"rnd\") trm *= n.rnd;\r\n                else if(p == \"noise\") trm *= noise(n.parent.nrm, n.nrm);\r\n                else if(p == \"dix\") trm *= n.parent.nrm;\r\n                else if(p == \"drnd\") trm *= n.parent.rnd;\r\n                else if(p == \"depth\") trm *= n.depth;\r\n                else if(p == \"idepth\") trm *= n.graph.depth - n.depth;\r\n                else if(p == \"depth-nrm\") trm *= 1/n.graph.depth * n.depth;\r\n                else if(p == \"idepth-nrm\") trm *= 1 - 1/n.graph.depth * n.depth;\r\n                else trm *= parseFloat(p);\r\n            }\r\n            out.base += trm;\r\n        }\r\n    }\r\n    //console.log(\"curve\", n.graph.depth, n.depth, (n.graph.depth == 1 ? 0 : 1/n.graph.depth * n.depth) );\r\n\r\n    return out;\r\n}\r\n\r\nfunction moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        //let trn = n.parent.rot + n.turn;\r\n\r\n        let _mirror = (n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ ( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - n.turn : n.parent.rot + n.turn;\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + n.step * cos(n.rot),\r\n            n.anchor.pos[1] + n.step * sin(n.rot)\r\n        ]\r\n\r\n        //if(t == 5) console.log(n.depth, n.ix, n.step, n.rot);\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}\r\n\r\n/*function moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        let trn;\r\n        if(isNaN(n.turn)) {\r\n            let x = n.turn.base;\r\n            if(n.turn.dur > 0) x += (1 / n.turn.dur) * (t % (n.turn.dur+1)) * n.turn.time;\r\n            x %= 1;\r\n            trn = n.parent.rot + (n.turn.min + ease(n.turn.ease, x, n.turn.pow) * n.turn.dif);\r\n            //if(n.parent.ix == 1) console.log(n.ix, n.parent.rot, n.turn.min, n.turn.ease, n.turn.pow, n.turn.dif);\r\n        } else {\r\n            trn = n.parent.rot + n.turn * n.ix;\r\n        }\r\n        let _mirror = int(n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ int( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - trn : n.parent.rot + trn;\r\n        //n.rot %= (Math.PI*2);\r\n\r\n        let stp;\r\n        if(isNaN(n.step)) {\r\n            let x = n.step.base;\r\n            if(n.step.dur > 0) x += (1 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time;\r\n            x %= 1;\r\n            stp = n.step.min + ease(n.step.ease, x, n.step.pow) * n.step.dif;\r\n            //if(n.parent.ix == 1) console.log(n.ix, stp, n.step.dif);\r\n        } else {\r\n            stp = n.step;\r\n        }\r\n        //console.log(n.ix, (0.999 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time);\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + stp * cos(n.rot),\r\n            n.anchor.pos[1] + stp * sin(n.rot)\r\n        ]\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}*/\r\n","\r\nfunction drawNode(n) {\r\n    if(n.anchor != null) line(n.anchor.pos[0], n.anchor.pos[1], n.pos[0], n.pos[1]);\r\n    ellipse(n.pos[0], n.pos[1], 10, 10);\r\n\r\n    for(let k of n.kids) {\r\n        drawNode(k);\r\n    }\r\n}\r\n\r\nclass RenderCurves {\r\n    constructor(df = {}) {\r\n        let args = df.props.render || {};\r\n\r\n        this.type= args.type || \"tree\";\r\n        this.levels = args.levels || [{stroke:0, weight:1}];\r\n        for(let lv of this.levels) {\r\n            if(! lv.hasOwnProperty(\"type\")) lv.type = this.type;\r\n            if(! lv.hasOwnProperty(\"stroke\")) lv.stroke = 0;\r\n            if(! lv.hasOwnProperty(\"fill\")) lv.fill = \"#888888\";\r\n            if(! lv.hasOwnProperty(\"weightAdd\")) lv.weightAdd = 0;\r\n            if(! lv.hasOwnProperty(\"weightMult\")) lv.weightMult = 1;\r\n            if(! lv.hasOwnProperty(\"sizeAdd\")) lv.sizeAdd = 0;\r\n            if(! lv.hasOwnProperty(\"sizeMult\")) lv.sizeMult = 1;\r\n        }\r\n\r\n        console.log(\"render type\", this.type);\r\n    }\r\n\r\n    render(n) {\r\n        for(let lv of this.levels) {\r\n            //stroke( lv[0] );\r\n            //strokeWeight( lv[1] || 1 );\r\n            //strokeWeight( (n.depth) * lv[1]);\r\n            //console.log(n.depth, lv[1]);\r\n            //fill(192);\r\n            this.renderNode(n, lv);\r\n        }\r\n    }\r\n\r\n    renderNode(n, level) {\r\n\r\n        noFill();\r\n        noStroke();\r\n\r\n        if(level.type== \"bezier\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=1; k<n.kids.length-1; k++) {\r\n                    let ps = [\r\n                        n.kids[k-1].pos[0] + (n.kids[k].pos[0] - n.kids[k-1].pos[0]) / 2,\r\n                        n.kids[k-1].pos[1] + (n.kids[k].pos[1] - n.kids[k-1].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[k+1].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[k+1].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(level.type== \"bezier-closed\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=0; k<n.kids.length; k++) {\r\n                    let prv = k==0 ? n.kids.length-1 : k-1;\r\n                    let nxt = k==n.kids.length-1 ? 0 : k+1;\r\n                    let ps = [\r\n                        n.kids[prv].pos[0] + (n.kids[k].pos[0] - n.kids[prv].pos[0]) / 2,\r\n                        n.kids[prv].pos[1] + (n.kids[k].pos[1] - n.kids[prv].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[nxt].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[nxt].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(level.type== \"polygon\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    line(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"tree\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                line(n.kids[k].anchor.pos[0], n.kids[k].anchor.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                //if(t == 6) console.log(k, n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n            }\r\n        } else if(level.type== \"circles\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                let sz = n.kids[k].size * level.sizeMult + level.sizeAdd;\r\n                fill(level.fill == \"node\" ? n.kids[k].fill : level.fill);\r\n                stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                ellipse( n.kids[k].pos[0], n.kids[k].pos[1], sz, sz);\r\n            }\r\n        }  else if(level.type== \"star\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.pos[0], n.pos[1], n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"umbrella\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [ (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0] ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[0], anc[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"snake\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[2], anc[3], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        }  else if(level.type== \"petals\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let pts = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    fill(level.fill == \"node\" ? n.kids[k].fill : level.fill);\r\n                    bezier(pts[0], pts[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], pts[2], pts[3]);\r\n                    bezier(pts[0], pts[1], n.kids[k].pos[0], n.kids[k].pos[1], n.kids[k].pos[0], n.kids[k].pos[1], pts[2], pts[3]);\r\n\r\n                }\r\n            }\r\n        }  else if(level.type== \"daisy\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=1; k<n.kids.length-1; k++) {\r\n                    let pts = [\r\n                        n.kids[k].pos[0] + (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, n.kids[k].pos[1] + (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2,\r\n                        n.kids[k].pos[0] + (n.kids[k+1].pos[0] - n.kids[k].pos[0]) / 2, n.kids[k].pos[1] + (n.kids[k+1].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    fill(level.fill == \"node\" ? n.kids[k].fill : level.fill);\r\n                    bezier(n.pos[0], n.pos[1], pts[0], pts[1], pts[0], pts[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                    bezier(n.pos[0], n.pos[1], pts[2], pts[3], pts[2], pts[3], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for(let k of n.kids) {\r\n            this.renderNode(k, level);\r\n        }\r\n    }\r\n}\r\n"],"file":"../bundle-min.js"}