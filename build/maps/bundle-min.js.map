{"version":3,"sources":["main.js","spread.js","render.js"],"names":["seed","density","render","canvas","editor","area","tickers","Set","t","go","graphs","def","props","renderConfig","type","levels","net","num","pos","ang","step","ease","pow","terms","min","max","dur","turn","children","setup","createCanvas","windowWidth","windowHeight","parent","background","stroke","strokeWeight","noFill","smooth","select","mouseClicked","reset","console","log","fromEditor","_def","JSON","parse","value","generate","int","random","randomSeed","noiseSeed","k","Graph","push","RenderCurves","stringify","replacer","key","val","Math","floor","total","weight","dad","dn","budget","neo","dif","PI","mirror","draw","g","moveNode","root","makeGroup","graph","i","n","Node","ix","nrm","kids","depth","count","anchor","isNaN","parseCurve","rot","j","length","[object Object]","args","this","rnd","mirrot","size","p","abs","sin","noise","mousePressed","keyTyped","document","activeElement","getElementById","gt","getTime","saveCanvas","saveJSON","defs","style","hide","show","contrast","f","constrain","now","Date","getFullYear","toString","substring","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","windowResized","resizeCanvas","c","out","base","time","ts","split","ps","parseFloat","trm","trn","x","stp","_mirror","cos","drawNode","line","ellipse","df","lv","renderNode","level","bezier","prv","nxt","hlf","anc","pts"],"mappings":"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","sourcesContent":["var tickers = new Set();\r\nvar t = 0;\r\nvar seed;\r\nvar density;\r\nvar go = true;\r\nvar render;\r\nvar canvas, editor, area;\r\n\r\n// pi/2 = 1.5707\r\n// pi/3 = 1.047\r\n// pi/4 = 0.7853\r\nvar graphs = [];\r\n\r\nvar def = {\r\n    \"props\": {\r\n        \"render\": \"curves\",\r\n        \"renderConfig\": { \"type\": \"petals\", \"levels\": [['#FFCC0088', 8], ['rgba(255, 0, 0, 0.1)', 4]] }\r\n    },\r\n    \"net\": {\r\n        \"type\": \"fan\", \"num\": 35, \"pos\": [ 500, 400 ], \"ang\": 0, \"step\": {\"ease\":\"sine\", \"pow\": -3, \"terms\": \"noise*0.8+t*0.2\", \"min\": 30, \"max\": 480, \"dur\": 200}, \"turn\": 6.28/35, \"children\": [\r\n            //{ \"type\": \"chain\", \"num\": 3,  \"step\": 40, \"turn\": 0.5 }\r\n        ]\r\n    }\r\n};\r\n\r\n\r\n\r\nfunction setup() {\r\n    canvas = createCanvas(windowWidth, windowHeight);\r\n    canvas.parent('container');\r\n    background(\"#FFFFFF\");\r\n    //frameRate(30);\r\n    stroke(0, 128);\r\n    strokeWeight(3);\r\n    //fill(0, 32);\r\n    noFill();\r\n    smooth();\r\n\r\n\r\n\r\n    editor = select(\"#editor\");\r\n    area = select(\"#editor-area\");\r\n    let update = select(\"#update\");\r\n    update.mouseClicked( function(){ reset(true) } );\r\n    let generate = select(\"#generate\");\r\n    generate.mouseClicked( function(){ reset(false) } );\r\n\r\n    reset( false );\r\n\r\n    console.log(\"setup\");\r\n}\r\n\r\nfunction reset(fromEditor) {\r\n  //let area = select(\"#editor-area\");\r\n  let _def;\r\n  if(fromEditor) {\r\n      _def = JSON.parse(area.value());\r\n  } else {\r\n      _def = generate();\r\n  }\r\n  //tickers.clear();\r\n  background(\"#FFFFFF\");\r\n  t = 0;\r\n  seed = int(random(999999));\r\n  randomSeed(seed);\r\n  noiseSeed(seed);\r\n\r\n  graphs = [];\r\n  //let _def = generate();\r\n  var k = new Graph( _def );\r\n  graphs.push(k);\r\n\r\n  render = new RenderCurves(_def);\r\n\r\n  //editor = select(\"#editor\");\r\n\r\n  area.value( JSON.stringify(_def, replacer, 2) );\r\n\r\n  //text(defString, 20, 20);\r\n}\r\n\r\nfunction replacer(key, val) {\r\n    if(typeof(val) == \"number\") return Math.floor(val*100)/100;\r\n    return val;\r\n}\r\n\r\nfunction generate() {\r\n    let budget = 200;\r\n    let total = 0;\r\n    let def = {\r\n        props:{\r\n            render: { type: \"tree\", levels: [ {stroke: 0, weight:16 }, {stroke:'#FFFFFF', weight:12}, {stroke: 0, weight:8 }, {stroke:'#FFFFFF', weight:4} ] }\r\n            //\"renderConfig\": { \"type\": \"tree\", \"levels\": [[0, 8], ['#FFFFFF', 4]] }\r\n        },\r\n        net:[]\r\n    };\r\n    let dad = def.net;\r\n    let dn = 1;\r\n\r\n    while(total < budget*0.8) {\r\n        let num = Math.floor( Math.pow(Math.random(), 2) * 10 ) + 2;\r\n        while(total + dn*num > budget && num > 1) {\r\n            num --;\r\n            console.log(num, dn, total);\r\n        }\r\n        let neo = {\r\n            num: num,\r\n            type: Math.random() < 0.6 ? \"fan\" : \"chain\",\r\n            step: { min:Math.random() * 120 + 30, dif:0 },\r\n            turn: { min:PI/2, dif:(TWO_PI) },\r\n            mirror: num % 2 == 0,\r\n            children:[]\r\n        };\r\n        dad.push(neo);\r\n        total += dn * num;\r\n\r\n        if(Math.random() < 0.7) {\r\n            console.log(\"child\", num, dn, total);\r\n            dad = neo.children;\r\n            dn *= num;\r\n\r\n        } else {\r\n            console.log(\"sibling\", num, dn, total);\r\n        }\r\n    }\r\n\r\n    def.net[0].pos = [windowWidth/2, windowHeight/2];\r\n\r\n    console.log(total, def);\r\n    return def;\r\n}\r\n\r\nfunction draw() {\r\n  if(go) {\r\n      background(\"#FFFFFF\");\r\n      for(let g of graphs) {\r\n          moveNode(g.root);\r\n          //drawNode(g.root);\r\n          render.render(g.root);\r\n      }\r\n\r\n      t++;\r\n  }\r\n}\r\n\r\nfunction makeGroup(g, dad, graph) {\r\n    //console.log(\"makeGroup\", g);\r\n    for(let i=0; i<g.num; i++) {\r\n        let n = new Node();\r\n        n.ix = i;\r\n        n.nrm = g.num == 1 ? 0 : (1 / (g.num)) * i;\r\n        n.parent = dad;\r\n        n.parent.kids.push(n);\r\n        n.depth = dad.depth+1;\r\n        n.graph = graph;\r\n\r\n        graph.count ++;\r\n        graph.depth = Math.max(graph.depth, n.depth);\r\n        //console.log(n);\r\n\r\n        if(g.type == \"chain\" && i > 0) {\r\n            n.anchor = n.parent.kids[i-1];\r\n        } else {\r\n            n.anchor = dad;\r\n        }\r\n\r\n        n.turn = isNaN(g.turn) ? parseCurve(g.turn, n) : g.turn;// n.parent.turn + g.turn * n.ix;\r\n        n.rot = 0;\r\n        n.step = isNaN(g.step) ? parseCurve(g.step, n) : g.step;\r\n\r\n        if(g.children) {\r\n            for(let j=0; j<g.children.length; j++) {\r\n                makeGroup(g.children[j], n, graph);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/***** GRAPH *****/\r\nclass Graph {\r\n  constructor(args = {}) {\r\n    this.ix = graphs.length;\r\n    this.count = 0;\r\n    this.depth = 0;\r\n\r\n    this.root = new Node();\r\n    for(let i=0; i<args.net.length; i++){\r\n        makeGroup(args.net[i], this.root, this);\r\n    }\r\n\r\n    console.log(\"graph\", this);\r\n  }\r\n}\r\n\r\n/***** NODE *****/\r\nclass Node {\r\n  constructor(args = {}) {\r\n      //properties\r\n      this.ix = args.ix || 0;\r\n      this.nrm = args.nrm || 0;\r\n      this.rnd = args.rnd || Math.random();\r\n      this.pos = args.pos || [windowWidth/2, windowHeight/2];\r\n      this.step = args.step || 30;\r\n      this.turn = args.turn || 0;\r\n      this.rot = args.rot || 0;\r\n      this.mirrot = args.mirror || false;\r\n      this.size = args.size || 20;\r\n      this.weight = args.weight || 1;\r\n      this.depth = args.depth || 0;\r\n\r\n      // Node references\r\n      this.graph = args.graph || null;\r\n      this.parent = args.parent || null;\r\n      this.anchor = args.anchor || null;\r\n      this.kids = args.kids || [];\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction ease(type, t, p) {\r\n    if(type == \"simple\") {\r\n        return p < 0 ? 1 - Math.pow(1-t, Math.abs(p)) : Math.pow(t, Math.abs(p));\r\n    } else if (type == \"IO\") {\r\n        //if(t < 0.5) return easeSimple(t*2, p) * 0.5;\r\n        //else return (1 - easeSimple(1-(t-0.5)*2, p)) * 0.5 + 0.5;\r\n        if(t < 0.5) return (p < 0 ? 1 - Math.pow(1-t*2, Math.abs(p)) : Math.pow(t*2, Math.abs(p))) * 0.5;\r\n        else return (1 - (p < 0 ? 1 - Math.pow(1-(1-(t-0.5)*2), Math.abs(p)) : Math.pow(1-(t-0.5)*2, Math.abs(p)))) * 0.5 + 0.5;\r\n    } else if (type == \"hill\") {\r\n        t = t < 0.5 ? t * 2 : 1 - (t-0.5)*2;\r\n        return p < 0 ? 1 - Math.pow(1-t, Math.abs(p)) : Math.pow(t, Math.abs(p));\r\n    } else if (type == \"sine\") {\r\n        return Math.sin(t*p*Math.PI*2) * 0.5 + 0.5;\r\n    } else if (type == \"noise\") {\r\n        return noise(t*16);\r\n    } else {\r\n        return t;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mousePressed() {\r\n  //pen.set(mouseX, mouseY);\r\n}\r\n\r\nfunction keyTyped() {\r\n  if (document.activeElement === document.getElementById('editor-area')) return;\r\n\r\n  if (key === ' ') {\r\n    go = !go;\r\n    console.log(\"go\", go);\r\n  } else if(key === 'r') {\r\n    reset(false);\r\n  } else if(key === 's') {\r\n      let gt = getTime();\r\n    saveCanvas(\"collider-\"+ gt +\".jpg\");\r\n    saveJSON(defs, \"collider-\"+ gt +\".jpg\", false);\r\n  } else if(key === 'g') {\r\n    generate();\r\n  }  else if(key === 'e') {\r\n      if(editor.style(\"display\") == \"block\") editor.hide();\r\n      else editor.show();\r\n  }\r\n  // uncomment to prevent any default behavior\r\n  //return false;\r\n}\r\n\r\nfunction contrast(n, f) {\r\n  return constrain(f*(n-0.5) + 0.5, 0, 1);\r\n}\r\n\r\nfunction getTime() {\r\n  let now = new Date();\r\n  return now.getFullYear().toString().substring(2,4) +\r\n        (now.getMonth() + 1).toString().padStart(2, \"0\") +\r\n        (now.getDate()).toString().padStart(2, \"0\") + \"-\" +\r\n        (now.getHours()).toString().padStart(2, \"0\") +\r\n        (now.getMinutes()).toString().padStart(2, \"0\") +\r\n        (now.getSeconds()).toString().padStart(2, \"0\");\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n  canvas.parent('container');\r\n  background(\"#FFFFFF\");\r\n}\r\n","function parseCurve(c, n) {\r\n    c.terms = c.terms || \"ix\";\r\n\r\n    let out = {};\r\n    out.ease = c.ease || \"none\";\r\n    out.pow = c.pow || 2;\r\n    out.min = c.min || 0;\r\n    //out.max = c.max || 1;\r\n    out.dif = c.dif || 0;\r\n    out.dur = c.dur || 0;\r\n\r\n    out.base = 0;\r\n    out.time = 0;\r\n\r\n    let ts = c.terms.split('+')\r\n    for(let t of ts) {\r\n        let ps = t.split('*');\r\n        if(ps[0] == 't' || ps[0] == 'time') {\r\n            out.time = ps.length > 1 ? parseFloat(ps[1]) : 1;\r\n        } else {\r\n            let trm = 1;\r\n            for(let p of ps) {\r\n                if(p == \"ix\") trm *= n.nrm;\r\n                else if(p == \"rnd\") trm *= n.rnd;\r\n                else if(p == \"noise\") trm *= noise(n.parent.nrm, n.nrm);\r\n                else if(p == \"dix\") trm *= n.parent.nrm;\r\n                else if(p == \"drnd\") trm *= n.parent.rnd;\r\n                else trm *= parseFloat(p);\r\n            }\r\n            out.base += trm;\r\n        }\r\n    }\r\n    //console.log(out);\r\n\r\n    return out;\r\n}\r\n\r\nfunction moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        let trn;\r\n        if(isNaN(n.turn)) {\r\n            let x = n.turn.base;\r\n            if(n.turn.dur > 0) x += (1 / n.turn.dur) * (t % (n.turn.dur+1)) * n.turn.time;\r\n            x %= 1;\r\n            trn = n.parent.rot + (n.turn.min + ease(n.turn.ease, x, n.turn.pow) * n.turn.dif);\r\n            //if(n.parent.ix == 1) console.log(n.ix, n.parent.rot, n.turn.min, n.turn.ease, n.turn.pow, n.turn.dif);\r\n        } else {\r\n            trn = n.parent.rot + n.turn * n.ix;\r\n        }\r\n        let _mirror = int(n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ int( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - trn : n.parent.rot + trn;\r\n        //n.rot %= (Math.PI*2);\r\n\r\n        let stp;\r\n        if(isNaN(n.step)) {\r\n            let x = n.step.base;\r\n            if(n.step.dur > 0) x += (1 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time;\r\n            x %= 1;\r\n            stp = n.step.min + ease(n.step.ease, x, n.step.pow) * n.step.dif;\r\n            //if(n.parent.ix == 1) console.log(n.ix, stp, n.step.dif);\r\n        } else {\r\n            stp = n.step;\r\n        }\r\n        //console.log(n.ix, (0.999 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time);\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + stp * cos(n.rot),\r\n            n.anchor.pos[1] + stp * sin(n.rot)\r\n        ]\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}\r\n","\r\nfunction drawNode(n) {\r\n    if(n.anchor != null) line(n.anchor.pos[0], n.anchor.pos[1], n.pos[0], n.pos[1]);\r\n    ellipse(n.pos[0], n.pos[1], 10, 10);\r\n\r\n    for(let k of n.kids) {\r\n        drawNode(k);\r\n    }\r\n}\r\n\r\nclass RenderCurves {\r\n    constructor(df = {}) {\r\n        let args = df.props.render || {};\r\n\r\n        this.type = args.type || \"star\";\r\n        this.levels = args.levels || [{stroke:0, weight:1}];\r\n\r\n    }\r\n\r\n    render(n) {\r\n        for(let lv of this.levels) {\r\n            //stroke( lv[0] );\r\n            //strokeWeight( lv[1] || 1 );\r\n            //strokeWeight( (n.depth) * lv[1]);\r\n            //console.log(n.depth, lv[1]);\r\n            //fill(192);\r\n            this.renderNode(n, lv);\r\n        }\r\n    }\r\n\r\n    renderNode(n, level) {\r\n        stroke(level.stroke);\r\n        strokeWeight( level.weight );\r\n\r\n        if(this.type == \"bezier\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=1; k<n.kids.length-1; k++) {\r\n                    let ps = [\r\n                        n.kids[k-1].pos[0] + (n.kids[k].pos[0] - n.kids[k-1].pos[0]) / 2,\r\n                        n.kids[k-1].pos[1] + (n.kids[k].pos[1] - n.kids[k-1].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[k+1].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[k+1].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(this.type == \"bezier-closed\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=0; k<n.kids.length; k++) {\r\n                    let prv = k==0 ? n.kids.length-1 : k-1;\r\n                    let nxt = k==n.kids.length-1 ? 0 : k+1;\r\n                    let ps = [\r\n                        n.kids[prv].pos[0] + (n.kids[k].pos[0] - n.kids[prv].pos[0]) / 2,\r\n                        n.kids[prv].pos[1] + (n.kids[k].pos[1] - n.kids[prv].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[nxt].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[nxt].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(this.type == \"polygon\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    line(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(this.type == \"tree\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                line(n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n            }\r\n        } else if(this.type == \"circles\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                ellipse( n.kids[k].pos[0], n.kids[k].pos[1], n.kids[k].size, n.kids[k].size);\r\n            }\r\n        }  else if(this.type == \"star\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    bezier(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.pos[0], n.pos[1], n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(this.type == \"umbrella\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [ (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0] ];\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[0], anc[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        } else if(this.type == \"snake\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[2], anc[3], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        }  else if(this.type == \"petals\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let pts = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    bezier(pts[0], pts[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], pts[2], pts[3]);\r\n                    bezier(pts[0], pts[1], n.kids[k].pos[0], n.kids[k].pos[1], n.kids[k].pos[0], n.kids[k].pos[1], pts[2], pts[3]);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for(let k of n.kids) {\r\n            this.renderNode(k, level);\r\n        }\r\n    }\r\n}\r\n"],"file":"../bundle-min.js"}