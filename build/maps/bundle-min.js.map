{"version":3,"sources":["main.js","generate.js","spread.js","render.js"],"names":["seed","density","render","canvas","editor","area","tickers","Set","t","go","tweenable","graphs","def0","props","renderConfig","type","levels","net","num","pos","ang","step","ease","pow","terms","min","max","dur","turn","children","def","size","fill","stroke","weight","dif","mirror","setup","createCanvas","windowWidth","windowHeight","parent","background","strokeWeight","noFill","smooth","select","mouseClicked","reset","console","log","fromEditor","_def","JSON","parse","value","generateSimple","int","random","randomSeed","noiseSeed","k","Graph","push","stringify","replacer","RenderCurves","key","val","Math","floor","draw","g","root","update","moveNode","makeGroup","dad","graph","i","n","Node","ix","nrm","kids","depth","count","anchor","rot","init","j","length","[object Object]","args","this","rnd","curves","tw","isNaN","parseCurve","prop","Object","entries","x","base","ti","time","p","abs","sin","PI","noise","mousePressed","keyTyped","document","activeElement","getElementById","gt","getTime","saveCanvas","saveJSON","defs","generate","style","hide","show","contrast","f","constrain","now","Date","getFullYear","toString","substring","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","windowResized","resizeCanvas","generateWithBudget","total","angles","weightMult","weightAdd","dn","budget","neo","a1","TWO_PI","c","out","ts","split","ps","parseFloat","trm","_mirror","cos","drawNode","line","ellipse","df","lv","hasOwnProperty","sizeAdd","sizeMult","renderNode","level","noStroke","bezier","prv","nxt","sz","hlf","anc","pts"],"mappings":"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","sourcesContent":["var tickers = new Set();\r\nvar t = 0;\r\nvar seed;\r\nvar density;\r\nvar go = true;\r\nvar render;\r\nvar canvas, editor, area;\r\nvar tweenable = [\"step\", \"turn\", \"size\", \"weight\"];\r\n\r\n// pi/2 = 1.5707\r\n// pi/3 = 1.047\r\n// pi/4 = 0.7853\r\nvar graphs = [];\r\n\r\nvar def0 = {\r\n    \"props\": {\r\n        \"render\": \"curves\",\r\n        \"renderConfig\": { \"type\": \"petals\", \"levels\": [['#FFCC0088', 8], ['rgba(255, 0, 0, 0.1)', 4]] }\r\n    },\r\n    \"net\": {\r\n        \"type\": \"fan\", \"num\": 35, \"pos\": [ 500, 400 ], \"ang\": 0, \"step\": {\"ease\":\"sine\", \"pow\": -3, \"terms\": \"noise*0.8+t*0.2\", \"min\": 30, \"max\": 480, \"dur\": 200}, \"turn\": 6.28/35, \"children\": [\r\n            //{ \"type\": \"chain\", \"num\": 3,  \"step\": 40, \"turn\": 0.5 }\r\n        ]\r\n    }\r\n};\r\n\r\nvar def = {\r\n  \"props\": {\r\n    \"render\": {\r\n      \"type\": \"tree\",\r\n      \"levels\": [\r\n        {\r\n          \"type\": \"circles\",\r\n          \"size\": 1.2,\r\n          \"fill\": \"#666666\",\r\n          \"stroke\": 0,\r\n          \"weight\": 1\r\n        },\r\n        {\r\n          \"type\": \"circles\",\r\n          \"size\": 1,\r\n          \"fill\": \"#FFFFFF\",\r\n          \"stroke\": 0,\r\n          \"weight\": 1\r\n        },\r\n        {\r\n          \"stroke\": 0,\r\n          \"weight\": 1.5,\r\n          \"type\": \"tree\",\r\n          \"fill\": \"#888888\",\r\n          \"size\": 1\r\n        },\r\n        {\r\n          \"stroke\": \"#FFFFFF\",\r\n          \"weight\": 1,\r\n          \"type\": \"tree\",\r\n          \"fill\": \"#888888\",\r\n          \"size\": 1\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"net\": [\r\n    {\r\n      \"num\": 2,\r\n      \"type\": \"fan\",\r\n      \"step\": {\r\n        \"min\": 124.75,\r\n        \"dif\": 0,\r\n        \"terms\": \"ix\"\r\n      },\r\n      \"turn\": {\r\n        \"min\": 1.57,\r\n        \"dif\": 6.28,\r\n        \"terms\": \"ix\"\r\n      },\r\n      \"mirror\": false,\r\n      \"weight\": 2,\r\n      \"size\": {\r\n        \"min\": 10,\r\n        \"dif\": 40,\r\n        \"terms\": \"depth\"\r\n      },\r\n      \"children\": [\r\n        {\r\n          \"num\": 3,\r\n          \"type\": \"fan\",\r\n          \"step\": {\r\n            \"min\": 142.94,\r\n            \"dif\": 0,\r\n            \"terms\": \"ix\"\r\n          },\r\n          \"turn\": {\r\n            \"min\": 1.57,\r\n            \"dif\": 6.28,\r\n            \"terms\": \"ix\"\r\n          },\r\n          \"mirror\": false,\r\n          \"weight\": 2,\r\n          \"size\": {\r\n            \"min\": 10,\r\n            \"dif\": 40,\r\n            \"terms\": \"depth\"\r\n          },\r\n          \"children\": [\r\n            {\r\n              \"num\": 4,\r\n              \"type\": \"fan\",\r\n              \"step\": {\r\n                \"min\": 51.87,\r\n                \"dif\": 0,\r\n                \"terms\": \"ix\"\r\n              },\r\n              \"turn\": {\r\n                \"min\": 1.57,\r\n                \"dif\": 6.28,\r\n                \"terms\": \"ix\"\r\n              },\r\n              \"mirror\": false,\r\n              \"weight\": 2,\r\n              \"size\": {\r\n                \"min\": 10,\r\n                \"dif\": 40,\r\n                \"terms\": \"depth\"\r\n              },\r\n              \"children\": []\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"pos\": [\r\n        702.5,\r\n        503.5\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\n\r\n\r\nfunction setup() {\r\n    canvas = createCanvas(windowWidth, windowHeight);\r\n    canvas.parent('container');\r\n    background(\"#FFFFFF\");\r\n    //frameRate(30);\r\n    stroke(0, 128);\r\n    strokeWeight(3);\r\n    //fill(0, 32);\r\n    noFill();\r\n    smooth();\r\n\r\n\r\n\r\n    editor = select(\"#editor\");\r\n    area = select(\"#editor-area\");\r\n    let update = select(\"#update\");\r\n    update.mouseClicked( function(){ reset(true) } );\r\n    let generate = select(\"#generate\");\r\n    generate.mouseClicked( function(){ reset(false) } );\r\n\r\n    reset( false );\r\n\r\n    console.log(\"setup\");\r\n}\r\n\r\nfunction reset(fromEditor) {\r\n  //let area = select(\"#editor-area\");\r\n  let _def;\r\n  if(fromEditor) {\r\n      _def = JSON.parse(area.value());\r\n  } else {\r\n      _def = generateSimple();\r\n  }\r\n  //tickers.clear();\r\n  background(\"#FFFFFF\");\r\n  t = 0;\r\n  seed = int(random(999999));\r\n  randomSeed(seed);\r\n  noiseSeed(seed);\r\n\r\n  graphs = [];\r\n  //let _def = generate();\r\n  var k = new Graph( _def );\r\n  graphs.push(k);\r\n\r\n  area.value( JSON.stringify(_def, replacer, 2) );\r\n\r\n  render = new RenderCurves(_def);\r\n\r\n}\r\n\r\nfunction replacer(key, val) {\r\n    if(typeof(val) == \"number\") return Math.floor(val*100)/100;\r\n    return val;\r\n}\r\n\r\n\r\n\r\nfunction draw() {\r\n  if(go) {\r\n      background(\"#FFFFFF\");\r\n      for(let g of graphs) {\r\n          g.root.update();\r\n          moveNode(g.root);\r\n          //drawNode(g.root);\r\n          render.render(g.root);\r\n      }\r\n\r\n      t++;\r\n  }\r\n}\r\n\r\nfunction makeGroup(g, dad, graph) {\r\n    //console.log(\"makeGroup\", g);\r\n    for(let i=0; i<g.num; i++) {\r\n        let n = new Node();\r\n        n.ix = i;\r\n        n.nrm = g.num == 1 ? 0 : (1 / (g.num)) * i;\r\n        n.parent = dad;\r\n        n.parent.kids.push(n);\r\n        n.depth = dad.depth+1;\r\n        n.graph = graph;\r\n\r\n        graph.count ++;\r\n        graph.depth = Math.max(graph.depth, n.depth);\r\n        //console.log(n);\r\n\r\n        if(g.type == \"chain\" && i > 0) {\r\n            n.anchor = dad.kids[i-1];\r\n        } else {\r\n            n.anchor = dad;\r\n        }\r\n\r\n        //n.turn = isNaN(g.turn) ? parseCurve(g.turn, n) : g.turn;// n.parent.turn + g.turn * n.ix;\r\n        //n.step = isNaN(g.step) ? parseCurve(g.step, n) : g.step;\r\n        n.type = g.type;\r\n        n.rot = 0;\r\n        n.turn = g.turn;\r\n        n.step = g.step;\r\n        n.mirror = g.mirror;\r\n        n.size = g.size;\r\n        n.weight = g.weight;\r\n        n.fill = g.fill;\r\n        n.stroke = g.stroke;\r\n\r\n        n.init();\r\n\r\n        if(g.children) {\r\n            for(let j=0; j<g.children.length; j++) {\r\n                makeGroup(g.children[j], n, graph);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/***** GRAPH *****/\r\nclass Graph {\r\n  constructor(args = {}) {\r\n    this.ix = graphs.length;\r\n    this.count = 0;\r\n    this.depth = 0;\r\n\r\n    this.root = new Node();\r\n    for(let i=0; i<args.net.length; i++){\r\n        makeGroup(args.net[i], this.root, this);\r\n    }\r\n    this.root.init();\r\n\r\n    console.log(\"graph\", this);\r\n  }\r\n}\r\n\r\n/***** NODE *****/\r\nclass Node {\r\n    constructor(args = {}) {\r\n        //properties\r\n        this.ix = args.ix || 0;\r\n        this.nrm = args.nrm || 0;\r\n        this.rnd = args.rnd || Math.random();\r\n        this.pos = args.pos || [windowWidth / 2, windowHeight / 2];\r\n        this.step = args.step || 30;\r\n        this.turn = args.turn || 0;\r\n        this.rot = args.rot || 0;\r\n        this.mirror = args.mirror || false;\r\n        this.size = args.size || 20;\r\n        this.weight = args.weight || 1;\r\n        this.depth = args.depth || 0;\r\n        this.fill = args.fill || \"#888888\";\r\n        this.stroke = args.stroke || 0;\r\n\r\n        // Node references\r\n        this.graph = args.graph || null;\r\n        this.parent = args.parent || null;\r\n        this.anchor = args.anchor || null;\r\n        this.kids = args.kids || [];\r\n\r\n        this.curves = {};\r\n\r\n    }\r\n\r\n    init() {\r\n        for (let tw of tweenable) {\r\n            if (isNaN(this[tw])) {\r\n                this.curves[tw] = parseCurve(this[tw], this);\r\n            }\r\n        }\r\n\r\n        for(let k of this.kids) {\r\n            k.init();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        for(let [prop, val] of Object.entries(this.curves)) {\r\n            let x = val.base;\r\n            //if(val.dur > 0) x += (1 / val.dur) * (t % (val.dur+1)) * val.time;\r\n            if(val.dur > 0) { // come and go\r\n                let ti = floor(t / (val.dur+1)) % 2 == 0 ? t % (val.dur+1) : (val.dur+1) - (t % (val.dur+1));\r\n                x += (1 / val.dur) * ti * val.time;\r\n            }\r\n            if(x > 1) x %= 1;\r\n            //if(x > 1) x = floor(x%2) == 0 ? x%1 : 1 - (x%1);\r\n            //if(this.ix == 23 && prop == \"step\") console.log(x, floor(x%2));\r\n\r\n\r\n            this[prop] = val.min + ease(val.ease, x, val.pow) * val.dif;\r\n        }\r\n\r\n        for(let k of this.kids) {\r\n            k.update();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction ease(type, x, p) {\r\n    if(type == \"simple\") {\r\n        return p < 0 ? 1 - Math.pow(1-x, Math.abs(p)) : Math.pow(x, Math.abs(p));\r\n    } else if (type == \"IO\") {\r\n        //if(t < 0.5) return easeSimple(t*2, p) * 0.5;\r\n        //else return (1 - easeSimple(1-(t-0.5)*2, p)) * 0.5 + 0.5;\r\n        if(x < 0.5) return (p < 0 ? 1 - Math.pow(1-x*2, Math.abs(p)) : Math.pow(x*2, Math.abs(p))) * 0.5;\r\n        else return (1 - (p < 0 ? 1 - Math.pow(1-(1-(x-0.5)*2), Math.abs(p)) : Math.pow(1-(x-0.5)*2, Math.abs(p)))) * 0.5 + 0.5;\r\n    } else if (type == \"hill\") {\r\n        x = x < 0.5 ? x * 2 : 1 - (x-0.5)*2;\r\n        return p < 0 ? 1 - Math.pow(1-x, Math.abs(p)) : Math.pow(x, Math.abs(p));\r\n    } else if (type == \"sine\") {\r\n        return Math.sin(x*p*Math.PI*2) * 0.5 + 0.5;\r\n    } else if (type == \"noise\") {\r\n        return noise(x*16);\r\n    } else {\r\n        return x;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mousePressed() {\r\n  //pen.set(mouseX, mouseY);\r\n}\r\n\r\nfunction keyTyped() {\r\n    if (document.activeElement === document.getElementById('editor-area')) return;\r\n\r\n    if (key === ' ') {\r\n        go = !go;\r\n        console.log(\"go\", go);\r\n    } else if (key === 'r') {\r\n        reset(false);\r\n    } else if (key === 's') {\r\n        let gt = getTime();\r\n        saveCanvas(\"collider-\" + gt + \".jpg\");\r\n        saveJSON(defs, \"collider-\" + gt + \".jpg\", false);\r\n    } else if (key === 'g') {\r\n        generate();\r\n    } else if (key === 'e') {\r\n        if (editor.style(\"display\") == \"block\") editor.hide();\r\n        else editor.show();\r\n    }\r\n    // uncomment to prevent any default behavior\r\n    //return false;\r\n}\r\n\r\nfunction contrast(n, f) {\r\n  return constrain(f*(n-0.5) + 0.5, 0, 1);\r\n}\r\n\r\nfunction getTime() {\r\n  let now = new Date();\r\n  return now.getFullYear().toString().substring(2,4) +\r\n        (now.getMonth() + 1).toString().padStart(2, \"0\") +\r\n        (now.getDate()).toString().padStart(2, \"0\") + \"-\" +\r\n        (now.getHours()).toString().padStart(2, \"0\") +\r\n        (now.getMinutes()).toString().padStart(2, \"0\") +\r\n        (now.getSeconds()).toString().padStart(2, \"0\");\r\n}\r\n\r\nfunction windowResized() {\r\n  resizeCanvas(windowWidth, windowHeight);\r\n  canvas.parent('container');\r\n  background(\"#FFFFFF\");\r\n}\r\n","function generateWithBudget() {\r\n    let budget = 200;\r\n    let total = 0;\r\n    let angles = [PI/2, PI, PI*2];\r\n    let def = {\r\n        props:{\r\n            render: { levels: [\r\n                {type:\"tree\", stroke: '#999999', weightMult:0, weightAdd:1 },\r\n                {type:\"bezier\", stroke: '#00000088', weightAdd:4 },\r\n                {type:\"bezier\", stroke:'#FFFFFF88', weight:0} ]\r\n            }\r\n            //\"renderConfig\": { \"type\": \"tree\", \"levels\": [[0, 8], ['#FFFFFF', 4]] }\r\n        },\r\n        net:[]\r\n    };\r\n    let dad = def.net;\r\n    let dn = 1;\r\n\r\n    while(total < budget*0.8) {\r\n        let num = Math.floor( Math.pow(Math.random(), 2) * 10 ) + 2;\r\n        while(total + dn*num > budget && num > 1) {\r\n            num --;\r\n            //console.log(num, dn, total);\r\n        }\r\n        let neo = {\r\n            num: num,\r\n            type: Math.random() < 0.6 ? \"fan\" : \"chain\",\r\n            step: { min:Math.random() * 120 + 30, dif:0 },\r\n            turn: { min:PI/2, dif:angles[Math.floor(random(angles.length))] },\r\n            mirror: num % 2 == 0,\r\n            weight: { min:2, dif:2, terms:\"depth\" },\r\n            size: { min:10, dif:40, terms:\"depth\" },\r\n            children:[]\r\n        };\r\n        dad.push(neo);\r\n        total += dn * num;\r\n\r\n        if(Math.random() < 0.7) {\r\n            //console.log(\"child\", num, dn, total);\r\n            dad = neo.children;\r\n            dn *= num;\r\n\r\n        } else {\r\n            //console.log(\"sibling\", num, dn, total);\r\n        }\r\n    }\r\n\r\n    def.net[0].pos = [windowWidth/2, windowHeight/2];\r\n\r\n    //console.log(total, def);\r\n    return def;\r\n}\r\n\r\nfunction generateSimple() {\r\n    let a1 = random(0.1, PI/2);//PI/2;\r\n\r\n    let def = {\r\n    props:{\r\n        render: { levels: [\r\n            {type:\"tree\", stroke: '#999999', weightMult:0, weightAdd:1 },\r\n            {type:\"circles\", fill: '#00000088'}\r\n        ] }\r\n    },\r\n    net:[\r\n            {\r\n                num:2,\r\n                type:\"fan\",\r\n                mirror:true,\r\n                size: 36,\r\n                weight: 1,\r\n                step: 30,\r\n                turn:{ min:PI/2+a1, dif:-a1*4, terms:\"ix\" },\r\n                children:[\r\n                    {\r\n                        num:6,\r\n                        type:\"fan\",\r\n                        mirror:true,\r\n                        size: 18,\r\n                        weight: 1,\r\n                        step:{ min:random(50, 300), dif:0, terms:\"ix*2\", ease:\"hill\", pow:3 },\r\n                        turn:{ min:0, dif:random(1, TWO_PI), terms:\"ix\" },\r\n                        //turn:{ min:0, dif:TWO_PI, terms:\"ix\" },\r\n                        children:[\r\n                            {\r\n                                num:24,\r\n                                type:\"fan\",\r\n                                mirror:true,\r\n                                size: 6,\r\n                                weight: 1,\r\n                                step:{ min:random(50, 300), dif:200, terms:\"t*0.5+ix*0.5\", ease:\"noise\", pow:3, dur:200 },\r\n                                turn:{ min:0, dif:random(1, TWO_PI), terms:\"ix\" },\r\n                                //turn:{ min:0, dif:TWO_PI, terms:\"ix\" },\r\n                                children:[\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n    console.log(\"GEN\", a1, PI/2+a1, -a1*4 );\r\n\r\n    def.net[0].pos = [windowWidth/2, windowHeight/2];\r\n    return def;\r\n\r\n}\r\n","function parseCurve(c, n) {\r\n    c.terms = c.terms || \"ix\";\r\n\r\n    let out = {};\r\n    out.ease = c.ease || \"none\";\r\n    out.pow = c.pow || 2;\r\n    out.min = c.min || 0;\r\n    //out.max = c.max || 1;\r\n    out.dif = c.dif || 0;\r\n    out.dur = c.dur || 0;\r\n\r\n    out.base = 0;\r\n    out.time = 0;\r\n\r\n    let ts = c.terms.split('+')\r\n    for(let t of ts) {\r\n        let ps = t.split('*');\r\n        if(ps[0] == 't' || ps[0] == 'time') {\r\n            out.time = ps.length > 1 ? parseFloat(ps[1]) : 1;\r\n        } else {\r\n            let trm = 1;\r\n            for(let p of ps) {\r\n                if(p == \"ix\") trm *= n.nrm;\r\n                else if(p == \"rnd\") trm *= n.rnd;\r\n                else if(p == \"noise\") trm *= noise(n.parent.nrm, n.nrm);\r\n                else if(p == \"dix\") trm *= n.parent.nrm;\r\n                else if(p == \"drnd\") trm *= n.parent.rnd;\r\n                else if(p == \"depth\") trm *= n.depth;\r\n                else if(p == \"idepth\") trm *= n.graph.depth - n.depth;\r\n                else if(p == \"depth-nrm\") trm *= 1/n.graph.depth * n.depth;\r\n                else if(p == \"idepth-nrm\") trm *= 1 - 1/n.graph.depth * n.depth;\r\n                else trm *= parseFloat(p);\r\n            }\r\n            out.base += trm;\r\n        }\r\n    }\r\n    //console.log(\"curve\", n.graph.depth, n.depth, (n.graph.depth == 1 ? 0 : 1/n.graph.depth * n.depth) );\r\n\r\n    return out;\r\n}\r\n\r\nfunction moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        //let trn = n.parent.rot + n.turn;\r\n\r\n        let _mirror = (n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ ( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - n.turn : n.parent.rot + n.turn;\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + n.step * cos(n.rot),\r\n            n.anchor.pos[1] + n.step * sin(n.rot)\r\n        ]\r\n\r\n        //if(t == 5) console.log(n.depth, n.ix, n.step, n.rot);\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}\r\n\r\n/*function moveNode(n) {\r\n    if(n.anchor !== null) {\r\n        let trn;\r\n        if(isNaN(n.turn)) {\r\n            let x = n.turn.base;\r\n            if(n.turn.dur > 0) x += (1 / n.turn.dur) * (t % (n.turn.dur+1)) * n.turn.time;\r\n            x %= 1;\r\n            trn = n.parent.rot + (n.turn.min + ease(n.turn.ease, x, n.turn.pow) * n.turn.dif);\r\n            //if(n.parent.ix == 1) console.log(n.ix, n.parent.rot, n.turn.min, n.turn.ease, n.turn.pow, n.turn.dif);\r\n        } else {\r\n            trn = n.parent.rot + n.turn * n.ix;\r\n        }\r\n        let _mirror = int(n.parent.anchor != null && n.parent.mirror && n.parent.anchor.ix%2 == 0) ^ int( n.mirror && n.parent.ix%2 == 0);\r\n\r\n        n.rot = _mirror? n.parent.rot - trn : n.parent.rot + trn;\r\n        //n.rot %= (Math.PI*2);\r\n\r\n        let stp;\r\n        if(isNaN(n.step)) {\r\n            let x = n.step.base;\r\n            if(n.step.dur > 0) x += (1 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time;\r\n            x %= 1;\r\n            stp = n.step.min + ease(n.step.ease, x, n.step.pow) * n.step.dif;\r\n            //if(n.parent.ix == 1) console.log(n.ix, stp, n.step.dif);\r\n        } else {\r\n            stp = n.step;\r\n        }\r\n        //console.log(n.ix, (0.999 / n.step.dur) * (t % (n.step.dur+1)) * n.step.time);\r\n\r\n        n.pos = [\r\n            n.anchor.pos[0] + stp * cos(n.rot),\r\n            n.anchor.pos[1] + stp * sin(n.rot)\r\n        ]\r\n    }\r\n\r\n    for(let k of n.kids) {\r\n        moveNode(k);\r\n    }\r\n}*/\r\n","\r\nfunction drawNode(n) {\r\n    if(n.anchor != null) line(n.anchor.pos[0], n.anchor.pos[1], n.pos[0], n.pos[1]);\r\n    ellipse(n.pos[0], n.pos[1], 10, 10);\r\n\r\n    for(let k of n.kids) {\r\n        drawNode(k);\r\n    }\r\n}\r\n\r\nclass RenderCurves {\r\n    constructor(df = {}) {\r\n        let args = df.props.render || {};\r\n\r\n        this.type= args.type || \"tree\";\r\n        this.levels = args.levels || [{stroke:0, weight:1}];\r\n        for(let lv of this.levels) {\r\n            if(! lv.hasOwnProperty(\"type\")) lv.type = this.type;\r\n            if(! lv.hasOwnProperty(\"stroke\")) lv.stroke = 0;\r\n            if(! lv.hasOwnProperty(\"fill\")) lv.fill = \"#888888\";\r\n            if(! lv.hasOwnProperty(\"weightAdd\")) lv.weightAdd = 0;\r\n            if(! lv.hasOwnProperty(\"weightMult\")) lv.weightMult = 1;\r\n            if(! lv.hasOwnProperty(\"sizeAdd\")) lv.sizeAdd = 0;\r\n            if(! lv.hasOwnProperty(\"sizeMult\")) lv.sizeMult = 1;\r\n        }\r\n\r\n        console.log(\"render type\", this.type);\r\n    }\r\n\r\n    render(n) {\r\n        for(let lv of this.levels) {\r\n            //stroke( lv[0] );\r\n            //strokeWeight( lv[1] || 1 );\r\n            //strokeWeight( (n.depth) * lv[1]);\r\n            //console.log(n.depth, lv[1]);\r\n            //fill(192);\r\n            this.renderNode(n, lv);\r\n        }\r\n    }\r\n\r\n    renderNode(n, level) {\r\n\r\n        noFill();\r\n        noStroke();\r\n\r\n        if(level.type== \"bezier\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=1; k<n.kids.length-1; k++) {\r\n                    let ps = [\r\n                        n.kids[k-1].pos[0] + (n.kids[k].pos[0] - n.kids[k-1].pos[0]) / 2,\r\n                        n.kids[k-1].pos[1] + (n.kids[k].pos[1] - n.kids[k-1].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[k+1].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[k+1].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(level.type== \"bezier-closed\") {\r\n            if(n.kids.length > 2) {\r\n                for(let k=0; k<n.kids.length; k++) {\r\n                    let prv = k==0 ? n.kids.length-1 : k-1;\r\n                    let nxt = k==n.kids.length-1 ? 0 : k+1;\r\n                    let ps = [\r\n                        n.kids[prv].pos[0] + (n.kids[k].pos[0] - n.kids[prv].pos[0]) / 2,\r\n                        n.kids[prv].pos[1] + (n.kids[k].pos[1] - n.kids[prv].pos[1]) / 2,\r\n                        n.kids[k].pos[0],\r\n                        n.kids[k].pos[1],\r\n                        n.kids[k].pos[0] + (n.kids[nxt].pos[0] - n.kids[k].pos[0]) / 2,\r\n                        n.kids[k].pos[1] + (n.kids[nxt].pos[1] - n.kids[k].pos[1]) / 2\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(ps[0], ps[1], ps[2], ps[3], ps[2], ps[3], ps[4], ps[5]);\r\n                }\r\n            }\r\n        } else if(level.type== \"polygon\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    line(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"tree\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                line(n.kids[k].anchor.pos[0], n.kids[k].anchor.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                //if(t == 6) console.log(k, n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n            }\r\n        } else if(level.type== \"circles\") {\r\n            for(let k=0; k<n.kids.length; k++) {\r\n                let sz = n.kids[k].size * level.sizeMult + level.sizeAdd;\r\n                fill(level.fill == \"node\" ? n.kids[k].fill : level.fill);\r\n                ellipse( n.kids[k].pos[0], n.kids[k].pos[1], sz, sz);\r\n            }\r\n        }  else if(level.type== \"star\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.pos[0], n.pos[1], n.pos[0], n.pos[1], n.kids[k].pos[0], n.kids[k].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"umbrella\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [ (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0] ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[0], anc[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        } else if(level.type== \"snake\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let anc = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(n.kids[k].pos[0], n.kids[k].pos[1], anc[0], anc[1], anc[2], anc[3], n.kids[k-1].pos[0], n.kids[k-1].pos[1]);\r\n                }\r\n            }\r\n        }  else if(level.type== \"petals\") {\r\n            if(n.kids.length > 1) {\r\n                for(let k=1; k<n.kids.length; k++) {\r\n                    let hlf = [ (n.kids[k-1].pos[0] - n.kids[k].pos[0]) / 2, (n.kids[k-1].pos[1] - n.kids[k].pos[1]) / 2 ];\r\n                    let pts = [\r\n                        (n.kids[k].pos[0] + hlf[0]) - hlf[1], (n.kids[k].pos[1] + hlf[1]) + hlf[0],\r\n                        (n.kids[k].pos[0] + hlf[0]) + hlf[1], (n.kids[k].pos[1] + hlf[1]) - hlf[0]\r\n                    ];\r\n                    stroke(level.stroke == \"node\" ? n.kids[k].stroke : level.stroke);\r\n                    strokeWeight( n.kids[k].weight * level.weightMult + level.weightAdd );\r\n                    bezier(pts[0], pts[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], n.kids[k-1].pos[0], n.kids[k-1].pos[1], pts[2], pts[3]);\r\n                    bezier(pts[0], pts[1], n.kids[k].pos[0], n.kids[k].pos[1], n.kids[k].pos[0], n.kids[k].pos[1], pts[2], pts[3]);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for(let k of n.kids) {\r\n            this.renderNode(k, level);\r\n        }\r\n    }\r\n}\r\n"],"file":"../bundle-min.js"}